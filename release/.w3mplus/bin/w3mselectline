#!/usr/bin/env sh


VERSION='selectline 2.0.0'

set -efu
umask '0022'
LC_ALL='C'
IFS=$(printf ' \t\n_')
IFS="${IFS%_}"
PATH="${PATH-}${PATH:+:}$(command -p getconf 'PATH')"
UNIX_STD='2003'         # HP-UX POSIX mode
XPG_SUS_ENV='ON'        # AIX POSIX mode
XPG_UNIX98='OFF'        # AIX UNIX 03 mode
POSIXLY_CORRECT='1'     # GNU Coreutils POSIX mode
COMMAND_MODE='unix2003' # macOS UNIX 03 mode
export 'IFS' 'LC_ALL' 'PATH' 'UNIX_STD' 'XPG_SUS_ENV' 'XPG_UNIX98' 'POSIXLY_CORRECT' 'COMMAND_MODE'




readonly 'EX_OK=0' # successful termination

readonly 'EX__BASE=64' # base value for error messages

readonly 'EX_USAGE=64'       # command line usage error
readonly 'EX_DATAERR=65'     # data format error
readonly 'EX_NOINPUT=66'     # cannot open input
readonly 'EX_NOUSER=67'      # addressee unknown
readonly 'EX_NOHOST=68'      # host name unknown
readonly 'EX_UNAVAILABLE=69' # service unavailable
readonly 'EX_SOFTWARE=70'    # internal software error
readonly 'EX_OSERR=71'       # system error (e.g., can't fork)
readonly 'EX_OSFILE=72'      # critical OS file missing
readonly 'EX_CANTCREAT=73'   # can't create (user) output file
readonly 'EX_IOERR=74'       # input/output error
readonly 'EX_TEMPFAIL=75'    # temp failure; user is invited to retry
readonly 'EX_PROTOCOL=76'    # remote error in protocol
readonly 'EX_NOPERM=77'      # permission denied
readonly 'EX_CONFIG=78'      # configuration error

readonly 'EX__MAX=78' # maximum listed value

trap 'case "${?}" in 0) endCall;; *) endCall "${EX_SOFTWARE}";; esac' 0 # EXIT
trap 'endCall 129' 1                                                    # SIGHUP
trap 'endCall 130' 2                                                    # SIGINT
trap 'endCall 131' 3                                                    # SIGQUIT
trap 'endCall 143' 15                                                   # SIGTERM

endCall() {
	trap '' 0 # EXIT
	rm -fr -- ${tmpDir:+"${tmpDir}"}
	exit "${1:-0}"
}
option_error() {
	printf '%s: %s\n' "${0##*/}" "${1}" >&2
	printf '%s\n' "詳細については '${0##*/} --help' を実行してください。" >&2

	endCall "${EX_USAGE}"
}
regex_match() {
	awk -- '
		BEGIN {
			for(i = 2; i < ARGC; i++) {
				if(ARGV[1] !~ ARGV[i]) {
					exit 1
				}
			}

			exit
		}
	' ${@+"${@}"} || return 1

	return 0
}
singlequote_escape() {
	set "${1}" "${2-}" ''

	until [ "${2#*\'}" = "${2}" ]; do
		set -- "${1}" "${2#*\'}" "${3}${2%%\'*}'\"'\"'"
	done

	eval "${1}=\"\${3}\${2}\""
}

parser_definition() {
	setup REST abbr:true error:option_error plus:true no:0 help:usage \
		-- 'Usage:' "  ${2##*/} [OPTION]... [ACTION] [COMMAND_ARG]..." \
		'' 'Options:'

	param line -l --line init:='1' validate:'regex_match "${OPTARG}" "^[1-9][0-9]*$"' var:UNSIGNED_INTEGER -- '行番号を指定する'
	param number -n --number init:='0' validate:'regex_match "${OPTARG}" "^([0$]|[+]?-?[1-9][0-9]*)$"' var:"'0' | '$' | SIGNED_INTEGER" -- '選択範囲を指定する'
	disp :usage -h --help -- 'このヘルプを表示して終了する'
	disp VERSION -v --version -- 'バージョン情報を表示して終了する'

	msg -- '' 'ACTION:'

	cmd display -- '選択範囲を表示する'
	cmd filter -- '選択範囲を任意のコマンドで実行する'
	cmd formatprg -- '選択範囲を PIPE_BUF で実行する'
	cmd lowercase -- '選択範囲をアルファベットを小文字に変換する'
	cmd operatorfunc -- '選択範囲を EXEC_SHELL で実行する'
	cmd rot13 -- '選択範囲のアルファベットを ROT13 で変換する'
	cmd switchcase -- '選択範囲のアルファベットを大文字と小文字に変換する'
	cmd uppercase -- '選択範囲をアルファベットを大文字に変換する'
	cmd yank -- '選択範囲をヤンクする'

	msg -- '' 'Exit Status:' \
		'    0 - successful termination' \
		'   64 - command line usage error' \
		'   65 - data format error' \
		'   66 - cannot open input' \
		'   67 - addressee unknown' \
		'   68 - host name unknown' \
		'   69 - service unavailable' \
		'   70 - internal software error' \
		"   71 - system error (e.g., can't fork)" \
		'   72 - critical OS file missing' \
		"   73 - can't create (user) output file" \
		'   74 - input/output error' \
		'   75 - temp failure; user is invited to retry' \
		'   76 - remote error in protocol' \
		'   77 - permission denied' \
		'   78 - configuration error' \
		'  129 - received SIGHUP' \
		'  130 - received SIGINT' \
		'  131 - received SIGQUIT' \
		'  143 - received SIGTERM'
}

line='1'
number='0'
REST=''
parse() {
	OPTIND=$(($# + 1))
	while OPTARG= && [ $# -gt 0 ]; do
		set -- "${1%%\=*}" "${1#*\=}" "$@"
		while [ ${#1} -gt 2 ]; do
			case $1 in *[!a-zA-Z0-9_-]*) break ;; esac
			case '--line' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --line" ;;
			esac
			case '--number' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --number" ;;
			esac
			case '--help' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --help" ;;
			esac
			case '--version' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --version" ;;
			esac
			break
		done
		case ${OPTARG# } in
		*\ *)
			eval "set -- $OPTARG $1 $OPTARG"
			OPTIND=$((($# + 1) / 2)) OPTARG=$1
			shift
			while [ $# -gt "$OPTIND" ]; do
				OPTARG="$OPTARG, $1"
				shift
			done
			set "Ambiguous option: $1 (could be $OPTARG)" ambiguous "$@"
			option_error "$@" >&2 || exit $?
			echo "$1" >&2
			exit 1
			;;
		?*)
			[ "$2" = "$3" ] || OPTARG="$OPTARG=$2"
			shift 3
			eval 'set -- "${OPTARG# }"' ${1+'"$@"'}
			OPTARG=
			;;
		*) shift 2 ;;
		esac
		case $1 in
		--?*=*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
			;;
		--no-* | --without-*) unset OPTARG ;;
		-[ln]?*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%"${OPTARG#??}"}" "${OPTARG#??}"' ${1+'"$@"'}
			;;
		-[hv]?*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
			OPTARG=
			;;
		+*) unset OPTARG ;;
		esac
		case $1 in
		'-l' | '--line')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^[1-9][0-9]*$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^[1-9][0-9]*$"
				break
			}
			line="$OPTARG"
			shift
			;;
		'-n' | '--number')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^([0$]|[+]?-?[1-9][0-9]*)$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^([0$]|[+]?-?[1-9][0-9]*)$"
				break
			}
			number="$OPTARG"
			shift
			;;
		'-h' | '--help')
			usage
			exit 0
			;;
		'-v' | '--version')
			echo "${VERSION}"
			exit 0
			;;
		--)
			while [ $# -gt 0 ]; do
				REST="${REST} \"\${$((OPTIND - $#))}\""
				shift
			done
			break
			;;
		[-+]?*)
			set "unknown" "$1"
			break
			;;
		*)
			case $1 in 'display' | 'filter' | 'formatprg' | 'lowercase' | 'operatorfunc' | 'rot13' | 'switchcase' | 'uppercase' | 'yank') ;;
			*)
				set "notcmd" "$1"
				break
				;;
			esac
			while [ $# -gt 0 ]; do
				REST="${REST} \"\${$((OPTIND - $#))}\""
				shift
			done
			break
			;;
		esac
		shift
	done
	[ $# -eq 0 ] && {
		OPTIND=1
		unset OPTARG
		return 0
	}
	case $1 in
	unknown) set "Unrecognized option: $2" "$@" ;;
	noarg) set "Does not allow an argument: $2" "$@" ;;
	required) set "Requires an argument: $2" "$@" ;;
	pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
	notcmd) set "Not a command: $2" "$@" ;;
	*) set "Validation error ($1): $2" "$@" ;;
	esac
	option_error "$@" >&2 || exit $?
	echo "$1" >&2
	exit 1
}
usage() {
	cat <<'GETOPTIONSHERE'
Usage:
  w3mselectline [OPTION]... [ACTION] [COMMAND_ARG]...

Options:
  -l,     --line UNSIGNED_INTEGER 
                              行番号を指定する
  -n,     --number '0' | '$' | SIGNED_INTEGER 
                              選択範囲を指定する
  -h,     --help              このヘルプを表示して終了する
  -v,     --version           バージョン情報を表示して終了する

ACTION:
  display   選択範囲を表示する
  filter    選択範囲を任意のコマンドで実行する
  formatprg 選択範囲を PIPE_BUF で実行する
  lowercase 選択範囲をアルファベットを小文字に変換する
  operatorfunc 
            選択範囲を EXEC_SHELL で実行する
  rot13     選択範囲のアルファベットを ROT13 で変換する
  switchcase 
            選択範囲のアルファベットを大文字と小文字に変換する
  uppercase 選択範囲をアルファベットを大文字に変換する
  yank      選択範囲をヤンクする

Exit Status:
    0 - successful termination
   64 - command line usage error
   65 - data format error
   66 - cannot open input
   67 - addressee unknown
   68 - host name unknown
   69 - service unavailable
   70 - internal software error
   71 - system error (e.g., can't fork)
   72 - critical OS file missing
   73 - can't create (user) output file
   74 - input/output error
   75 - temp failure; user is invited to retry
   76 - remote error in protocol
   77 - permission denied
   78 - configuration error
  129 - received SIGHUP
  130 - received SIGINT
  131 - received SIGQUIT
  143 - received SIGTERM
GETOPTIONSHERE
}

parse ${@+"${@}"}
eval "set -- ${REST}"

action="${1-display}"

case "${#}" in
'1')
	shift
	set -- 'cat'
	;;
[!0]) shift ;;
esac

singlequote_escape 'command' "${*}"

case "${number}" in
'+-'* | '+'* | '-'* | '0')
	case "${number}" in
	'+-'*)
		line=$((line + ${number#??}))
		number=$((${number#??} * -2))
		;;
	esac

	number=$((line + number))

	if [ "${number}" -lt 1 ]; then
		number='1'
	fi
	;;
esac

if [ "${number}" = '$' ] || [ "${line}" -le "${number}" ]; then
	startLine="${line}"
	endLine="${number}"
else
	startLine="${number}"
	endLine="${line}"
fi

case "${action}" in
'display')
	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}!d'"
	;;
'filter')
	displayTmp=$(mktemp -d)
	filterCommand=$(
		cat <<-EOF | tr -d '\n'
			head -n '$((startLine - 1))' -- '${displayTmp}/file';
			cat -- %s;
		EOF
	)

	case "${endLine}" in
	[1-9]*) filterCommand="${filterCommand} tail -n '+$((endLine + 1))' -- '${displayTmp}/file';" ;;
	esac

	filterCommand="${filterCommand} rm -fr -- '${displayTmp}';"

	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PRINT ${displayTmp}/file" \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}!d'" \
		-H 'W3m-control: PIPE_BUF' \
		-H "W3m-control: PIPE_BUF ${filterCommand}" \
		-H 'W3m-control: DELETE_PREVBUF' \
		-H "W3m-control: GOTO_LINE ${startLine}"
	;;
'formatprg')
	command=$(printf '%s' "${*}" | base64 | tr -d '\n')
	formatCommand=$(
		cat <<-EOF | tr -d '\n'
			file=%s;
			head -n '$((startLine - 1))' -- "\${file}";
			sed -e '${startLine},${endLine}!d' -- "\${file}" | sh -c 'eval "\$(echo "${command}" | base64 -d)"';
		EOF
	)

	case "${endLine}" in
	[1-9]*) formatCommand="${formatCommand} tail -n '+$((endLine + 1))' -- \"\${file}\";" ;;
	esac

	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF ${formatCommand}" \
		-H "W3m-control: GOTO_LINE ${startLine}"
	;;
'lowercase')
	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'" \
		-H "W3m-control: GOTO_LINE ${startLine}"
	;;
'operatorfunc')
	displayTmp=$(mktemp -d)
	command=$(printf '%s' "${*}" | base64 | tr -d '\n')

	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PRINT ${displayTmp}/file" \
		-H "W3m-control: EXEC_SHELL sed -e '${startLine},${endLine}!d' -- '${displayTmp}/file' | sh -c 'eval \"\$(echo \"${command}\" | base64 -d)\"'; rm -fr -- '${displayTmp}'"
	;;
'rot13')
	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}y/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm/'" \
		-H "W3m-control: GOTO_LINE ${startLine}"
	;;
'switchcase')
	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}y/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/'" \
		-H "W3m-control: GOTO_LINE ${startLine}"
	;;
'uppercase')
	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'" \
		-H "W3m-control: GOTO_LINE ${startLine}"
	;;
'yank')
	command=$(printf '%s' "${*}" | base64 | tr -d '\n')

	httpresponse \
		-H 'W3m-control: BACK' \
		-H "W3m-control: PIPE_BUF sed -e '${startLine},${endLine}!d' | sh -c 'eval \"\$(echo \"${command}\" | base64 -d)\"'" \
		-H 'W3m-control: BACK'
	;;
esac
