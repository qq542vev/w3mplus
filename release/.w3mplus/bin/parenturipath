#!/usr/bin/env sh

### Script: parenturipath
##
## 上位パスの URI を表示する。
##
## Metadata:
##
##   author - <qq542vev at https://purl.org/meta/me/>
##   version - 1.3.3
##   date - 2022-06-28
##   since - 2019-05-26
##   copyright - Copyright (C) 2019-2022 qq542vev. Some rights reserved.
##   license - <CC-BY at https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * <Project homepage at https://github.com/qq542vev/w3mplus>
##   * <Bag report at https://github.com/qq542vev/w3mplus/issues>

VERSION='parenturipath 1.3.3'

set -efu
umask '0022'
LC_ALL='C'
IFS=$(printf ' \t\n_')
IFS="${IFS%_}"
PATH="${PATH-}${PATH:+:}$(command -p getconf 'PATH')"
UNIX_STD='2003'         # HP-UX POSIX mode
XPG_SUS_ENV='ON'        # AIX POSIX mode
XPG_UNIX98='OFF'        # AIX UNIX 03 mode
POSIXLY_CORRECT='1'     # GNU Coreutils POSIX mode
COMMAND_MODE='unix2003' # macOS UNIX 03 mode
export 'IFS' 'LC_ALL' 'PATH' 'UNIX_STD' 'XPG_SUS_ENV' 'XPG_UNIX98' 'POSIXLY_CORRECT' 'COMMAND_MODE'

#!/usr/bin/env sh

### Script: sysexits.sh
##
## Exit status codes for system programs.
##
## This include file attempts to categorize possible error
## exit statuses for system programs, notably delivermail
## and the Berkeley network.
##
## Error numbers begin at EX__BASE to reduce the possibility of
## clashing with other exit statuses that random programs may
## already return.  The meaning of the codes is approximately
## as follows:
##
## EX_USAGE - The command was used incorrectly, e.g., with
##   the wrong number of arguments, a bad flag, a bad
##   syntax in a parameter, or whatever.
## EX_DATAERR - The input data was incorrect in some way.
##   This should only be used for user's data & not
##   system files.
## EX_NOINPUT - An input file (not a system file) did not
##   exist or was not readable.  This could also include
##   errors like "No message" to a mailer (if it cared
##   to catch it).
## EX_NOUSER - The user specified did not exist.  This might
##   be used for mail addresses or remote logins.
## EX_NOHOST - The host specified did not exist.  This is used
##   in mail addresses or network requests.
## EX_UNAVAILABLE - A service is unavailable.  This can occur
##   if a support program or file does not exist.  This
##   can also be used as a catchall message when something
##   you wanted to do doesn't work, but you don't know
##   why.
## EX_SOFTWARE - An internal software error has been detected.
##   This should be limited to non-operating system related
##   errors as possible.
## EX_OSERR - An operating system error has been detected.
##   This is intended to be used for such things as "cannot
##   fork", "cannot create pipe", or the like.  It includes
##   things like getuid returning a user that does not
##   exist in the passwd file.
## EX_OSFILE - Some system file (e.g., /etc/passwd, /etc/utmp,
##   etc.) does not exist, cannot be opened, or has some
##   sort of error (e.g., syntax error).
## EX_CANTCREAT - A (user specified) output file cannot be
##   created.
## EX_IOERR - An error occurred while doing I/O on some file.
## EX_TEMPFAIL - temporary failure, indicating something that
##   is not really an error.  In sendmail, this means
##   that a mailer (e.g.) could not create a connection,
##   and the request should be reattempted later.
## EX_PROTOCOL - the remote system returned something that
##   was "not possible" during a protocol exchange.
## EX_NOPERM - You did not have sufficient permission to
##   perform the operation.  This is not intended for
##   file system problems, which should use NOINPUT or
##   CANTCREAT, but rather for higher level permissions.
##
## metadata:
##
##   author - <qq542vev at https://purl.org/meta/me/>
##   date - 2020-03-05
##   version - 1.0.0
##   copyright - Copyright (c) 1987, 1993
##     The Regents of the University of California.  All rights reserved.
##   license - BSD-3-Clause
##   package - w3mplus
##   source - <sysexits.h at https://github.com/freebsd/freebsd/blob/master/include/sysexits.h>
##
## See Also:
##
##   * <Project homepage at https://github.com/qq542vev/w3mplus>
##   * <Bag report at https://github.com/qq542vev/w3mplus/issues>

#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the University nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.

readonly 'EX_OK=0' # successful termination

readonly 'EX__BASE=64' # base value for error messages

readonly 'EX_USAGE=64'       # command line usage error
readonly 'EX_DATAERR=65'     # data format error
readonly 'EX_NOINPUT=66'     # cannot open input
readonly 'EX_NOUSER=67'      # addressee unknown
readonly 'EX_NOHOST=68'      # host name unknown
readonly 'EX_UNAVAILABLE=69' # service unavailable
readonly 'EX_SOFTWARE=70'    # internal software error
readonly 'EX_OSERR=71'       # system error (e.g., can't fork)
readonly 'EX_OSFILE=72'      # critical OS file missing
readonly 'EX_CANTCREAT=73'   # can't create (user) output file
readonly 'EX_IOERR=74'       # input/output error
readonly 'EX_TEMPFAIL=75'    # temp failure; user is invited to retry
readonly 'EX_PROTOCOL=76'    # remote error in protocol
readonly 'EX_NOPERM=77'      # permission denied
readonly 'EX_CONFIG=78'      # configuration error

readonly 'EX__MAX=78' # maximum listed value

trap 'case "${?}" in 0) endCall;; *) endCall "${EX_SOFTWARE}";; esac' 0 # EXIT
trap 'endCall 129' 1                                                    # SIGHUP
trap 'endCall 130' 2                                                    # SIGINT
trap 'endCall 131' 3                                                    # SIGQUIT
trap 'endCall 143' 15                                                   # SIGTERM

endCall() {
	trap '' 0 # EXIT
	rm -fr -- ${tmpDir:+"${tmpDir}"}
	exit "${1:-0}"
}
option_error() {
	printf '%s: %s\n' "${0##*/}" "${1}" >&2
	printf '%s\n' "詳細については '${0##*/} --help' を実行してください。" >&2

	endCall "${EX_USAGE}"
}
regex_match() {
	awk -- '
		BEGIN {
			for(i = 2; i < ARGC; i++) {
				if(ARGV[1] !~ ARGV[i]) {
					exit 1
				}
			}

			exit
		}
	' ${@+"${@}"} || return 1

	return 0
}

# @getoptions
parser_definition() {
	setup REST abbr:true error:option_error plus:true no:0 help:usage \
		-- 'Usage:' "  ${2##*/} [OPTION]... [URI]..." \
		'' 'Options:'

	param number -n --number init:='1' validate:'regex_match "${OPTARG}" "^(0|[1-9][0-9]*)$"' var:UNSIGNED_INTEGER -- '指定した回数上昇する'
	disp :usage -h --help -- 'このヘルプを表示して終了する'
	disp VERSION -v --version -- 'バージョン情報を表示して終了する'

	msg -- '' 'Exit Status:' \
		'    0 - successful termination' \
		'   64 - command line usage error' \
		'   65 - data format error' \
		'   66 - cannot open input' \
		'   67 - addressee unknown' \
		'   68 - host name unknown' \
		'   69 - service unavailable' \
		'   70 - internal software error' \
		"   71 - system error (e.g., can't fork)" \
		'   72 - critical OS file missing' \
		"   73 - can't create (user) output file" \
		'   74 - input/output error' \
		'   75 - temp failure; user is invited to retry' \
		'   76 - remote error in protocol' \
		'   77 - permission denied' \
		'   78 - configuration error' \
		'  129 - received SIGHUP' \
		'  130 - received SIGINT' \
		'  131 - received SIGQUIT' \
		'  143 - received SIGTERM'
}
# @end

# @gengetoptions parser -i parser_definition parse "${1}"
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
number='1'
REST=''
parse() {
	OPTIND=$(($# + 1))
	while OPTARG= && [ $# -gt 0 ]; do
		set -- "${1%%\=*}" "${1#*\=}" "$@"
		while [ ${#1} -gt 2 ]; do
			case $1 in *[!a-zA-Z0-9_-]*) break ;; esac
			case '--number' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --number" ;;
			esac
			case '--help' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --help" ;;
			esac
			case '--version' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --version" ;;
			esac
			break
		done
		case ${OPTARG# } in
		*\ *)
			eval "set -- $OPTARG $1 $OPTARG"
			OPTIND=$((($# + 1) / 2)) OPTARG=$1
			shift
			while [ $# -gt "$OPTIND" ]; do
				OPTARG="$OPTARG, $1"
				shift
			done
			set "Ambiguous option: $1 (could be $OPTARG)" ambiguous "$@"
			option_error "$@" >&2 || exit $?
			echo "$1" >&2
			exit 1
			;;
		?*)
			[ "$2" = "$3" ] || OPTARG="$OPTARG=$2"
			shift 3
			eval 'set -- "${OPTARG# }"' ${1+'"$@"'}
			OPTARG=
			;;
		*) shift 2 ;;
		esac
		case $1 in
		--?*=*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
			;;
		--no-* | --without-*) unset OPTARG ;;
		-[n]?*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%"${OPTARG#??}"}" "${OPTARG#??}"' ${1+'"$@"'}
			;;
		-[hv]?*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
			OPTARG=
			;;
		+*) unset OPTARG ;;
		esac
		case $1 in
		'-n' | '--number')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^(0|[1-9][0-9]*)$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^(0|[1-9][0-9]*)$"
				break
			}
			number="$OPTARG"
			shift
			;;
		'-h' | '--help')
			usage
			exit 0
			;;
		'-v' | '--version')
			echo "${VERSION}"
			exit 0
			;;
		--)
			shift
			while [ $# -gt 0 ]; do
				REST="${REST} \"\${$((OPTIND - $#))}\""
				shift
			done
			break
			;;
		[-+]?*)
			set "unknown" "$1"
			break
			;;
		*)
			REST="${REST} \"\${$((OPTIND - $#))}\""
			;;
		esac
		shift
	done
	[ $# -eq 0 ] && {
		OPTIND=1
		unset OPTARG
		return 0
	}
	case $1 in
	unknown) set "Unrecognized option: $2" "$@" ;;
	noarg) set "Does not allow an argument: $2" "$@" ;;
	required) set "Requires an argument: $2" "$@" ;;
	pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
	notcmd) set "Not a command: $2" "$@" ;;
	*) set "Validation error ($1): $2" "$@" ;;
	esac
	option_error "$@" >&2 || exit $?
	echo "$1" >&2
	exit 1
}
usage() {
	cat <<'GETOPTIONSHERE'
Usage:
  parenturipath [OPTION]... [URI]...

Options:
  -n,     --number UNSIGNED_INTEGER 
                              指定した回数上昇する
  -h,     --help              このヘルプを表示して終了する
  -v,     --version           バージョン情報を表示して終了する

Exit Status:
    0 - successful termination
   64 - command line usage error
   65 - data format error
   66 - cannot open input
   67 - addressee unknown
   68 - host name unknown
   69 - service unavailable
   70 - internal software error
   71 - system error (e.g., can't fork)
   72 - critical OS file missing
   73 - can't create (user) output file
   74 - input/output error
   75 - temp failure; user is invited to retry
   76 - remote error in protocol
   77 - permission denied
   78 - configuration error
  129 - received SIGHUP
  130 - received SIGINT
  131 - received SIGQUIT
  143 - received SIGTERM
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

#eval "$(getoptions parser_definition parse "${0}")"
parse ${@+"${@}"}
eval "set -- ${REST}"

case "${#}" in
'0') set -- $(cat) ;;
esac

awkScript=$(
	cat <<-'EOF'
		function uri_path_remove_dot_segments(path,  result) {
			if(!index(path, ".")) {
				return path
			}

			result = ""

			while(path != "") {
				if(index(path, "./") == 1) {
					path = substr(path, 3)
				} else if(index(path, "../") == 1) {
					path = substr(path, 4)
				} else if(index(path, "/./") == 1) {
					path = substr(path, 3)
				} else if(path == "/.") {
						path = "/"
				} else if(index(path, "/../") == 1) {
					path = substr(path, 4)
					gsub(/\/?[^\/]*$/, "", result)
				} else if(path == "/..") {
					path = "/"
					gsub(/\/?[^\/]*$/, "", result)
				} else if(path == "." || path == "..") {
					path = ""
				} else {
					match(path, /^.[^\/]*/)

					result = result substr(path, RSTART, RLENGTH)
					path = substr(path, RLENGTH + 1)
				}
			}

			return result
		}

		function uri_path_parent(path, count) {
			path = uri_path_remove_dot_segments(path)
			gsub(/[/]+/, "/", path)

			for(; 1 <= count && path != "" && path != "/"; count--) {
				gsub(/[^/]*[/]?$/, "", path)
			}

			return path
		}
		function url_encode_normalize(string,  p2c,result) {
			p2c["2D"] = "-"; p2c["2E"] = "."; p2c["30"] = "0";
			p2c["31"] = "1"; p2c["32"] = "2"; p2c["33"] = "3";
			p2c["34"] = "4"; p2c["35"] = "5"; p2c["36"] = "6";
			p2c["37"] = "7"; p2c["38"] = "8"; p2c["39"] = "9";
			p2c["41"] = "A"; p2c["42"] = "B"; p2c["43"] = "C";
			p2c["44"] = "D"; p2c["45"] = "E"; p2c["46"] = "F";
			p2c["47"] = "G"; p2c["48"] = "H"; p2c["49"] = "I";
			p2c["4A"] = "J"; p2c["4B"] = "K"; p2c["4C"] = "L";
			p2c["4D"] = "M"; p2c["4E"] = "N"; p2c["4F"] = "O";
			p2c["50"] = "P"; p2c["51"] = "Q"; p2c["52"] = "R";
			p2c["53"] = "S"; p2c["54"] = "T"; p2c["55"] = "U";
			p2c["56"] = "V"; p2c["57"] = "W"; p2c["58"] = "X";
			p2c["59"] = "Y"; p2c["5A"] = "Z"; p2c["5F"] = "_";
			p2c["61"] = "a"; p2c["62"] = "b"; p2c["63"] = "c";
			p2c["64"] = "d"; p2c["65"] = "e"; p2c["66"] = "f";
			p2c["67"] = "g"; p2c["68"] = "h"; p2c["69"] = "i";
			p2c["6A"] = "j"; p2c["6B"] = "k"; p2c["6C"] = "l";
			p2c["6D"] = "m"; p2c["6E"] = "n"; p2c["6F"] = "o";
			p2c["70"] = "p"; p2c["71"] = "q"; p2c["72"] = "r";
			p2c["73"] = "s"; p2c["74"] = "t"; p2c["75"] = "u";
			p2c["76"] = "v"; p2c["77"] = "w"; p2c["78"] = "x";
			p2c["79"] = "y"; p2c["7A"] = "z"; p2c["7E"] = "z";

			for(result = ""; match(string, /%([0-9A-F][a-f]|[a-f][0-9A-F]|[a-f][a-f])/); string = substr(string, RSTART + RLENGTH)) {
				result = result substr(string, 1, RSTART - 1) toupper(substr(string, RSTART, RLENGTH))
			}

			string = result string

			for(result = ""; match(string, /%(2[DE]|3[0-9]|[46][1-9A-F]|5[0-9AF]|7[0-9AE])/); string = substr(string, RSTART + RLENGTH)) {
				result = result substr(string, 1, RSTART - 1) p2c[substr(string, RSTART + 1, 2)]
			}

			return result string
		}
		function uri_check(uri, relative) {
			if(relative) {
				return (uri ~ /^([A-Za-z][A-Za-z0-9+.-]*:)?(\/\/(([A-Za-z0-9._~!$&'()*+,;=:-]|%[0-9A-Fa-f]{2})*@)?(\[(((([0-9A-F]{1,4}:){6}|::([0-9A-F]{1,4}:){5}|([0-9A-F]{1,4})?::([0-9A-F]{1,4}:){4}|(([0-9A-F]{1,4}:){0,1}[0-9A-F]{1,4})?::([0-9A-F]{1,4}:){3}|(([0-9A-F]{1,4}:){0,2}[0-9A-F]{1,4})?::([0-9A-F]{1,4}:){2}|(([0-9A-F]{1,4}:){0,3}[0-9A-F]{1,4})?::[0-9A-F]{1,4}:|(([0-9A-F]{1,4}:){0,4}[0-9A-F]{1,4})?::)([0-9A-F]{1,4}:[0-9A-F]{1,4}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-F]{1,4}:){0,5}[0-9A-F]{1,4})?::[0-9A-F]{1,4}|(([0-9A-F]{1,4}:){0,6}[0-9A-F]{1,4})?::)|v[0-9A-F]+\.[A-Za-z0-9._~!$&'()*+,;=:-]+)]|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([A-Za-z0-9._~!$&'()*+,;=-]|%[0-9A-Fa-f]{2})*)(:[0-9]*)?(\/(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))*)*|\/((([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))+(\/(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))*)*)?|(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))+(\/(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))*)*|)(\?([A-Za-z0-9._~!$&'()*+,;=:@\/?-]|%[0-9A-Fa-f]{2})*)?(#([A-Za-z0-9._~!$&'()*+,;=:@\/?-]|%[0-9A-Fa-f]{2})*)?$/)
			} else {
				return (uri ~ /^[A-Za-z][A-Za-z0-9+.-]*:(\/\/(([A-Za-z0-9._~!$&'()*+,;=:-]|%[0-9A-Fa-f]{2})*@)?(\[(((([0-9A-F]{1,4}:){6}|::([0-9A-F]{1,4}:){5}|([0-9A-F]{1,4})?::([0-9A-F]{1,4}:){4}|(([0-9A-F]{1,4}:){0,1}[0-9A-F]{1,4})?::([0-9A-F]{1,4}:){3}|(([0-9A-F]{1,4}:){0,2}[0-9A-F]{1,4})?::([0-9A-F]{1,4}:){2}|(([0-9A-F]{1,4}:){0,3}[0-9A-F]{1,4})?::[0-9A-F]{1,4}:|(([0-9A-F]{1,4}:){0,4}[0-9A-F]{1,4})?::)([0-9A-F]{1,4}:[0-9A-F]{1,4}|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-F]{1,4}:){0,5}[0-9A-F]{1,4})?::[0-9A-F]{1,4}|(([0-9A-F]{1,4}:){0,6}[0-9A-F]{1,4})?::)|v[0-9A-F]+\.[A-Za-z0-9._~!$&'()*+,;=:-]+)]|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([A-Za-z0-9._~!$&'()*+,;=-]|%[0-9A-Fa-f]{2})*)(:[0-9]*)?(\/(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))*)*|\/((([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))+(\/(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))*)*)?|(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))+(\/(([A-Za-z0-9._~!$&'()*+,;=:@-]|%[0-9A-Fa-f]{2}))*)*|)(\?([A-Za-z0-9._~!$&'()*+,;=:@\/?-]|%[0-9A-Fa-f]{2})*)?(#([A-Za-z0-9._~!$&'()*+,;=:@\/?-]|%[0-9A-Fa-f]{2})*)?$/)
			}
		}
		function uri_parse(uri, element,  pattern,key,i,auth,result) {
			split("^[^:/?#]*: ^//[^/?#]* ^[^?#]* ^\\?[^#]* ^#.* ^[^@/?#]*@ ^[^:/?#]* ^:[^/?#]*", pattern, " ")
			split("scheme authority path query fragment userinfo host port", key, " ")
			split("", element)

			for(i = 1; i <= 5; i++) {
				element[key[i]] = ""

				if(match(uri, pattern[i])) {
					element[key[i]] = substr(uri, RSTART, RLENGTH)
					uri = substr(uri, RSTART + RLENGTH)
				}
			}

			element["userinfo"] = ""
			element["host"] = ""
			element["port"] = ""

			if(element["authority"]) {
				auth = substr(element["authority"], 3)

				for(i = 6; i <= 8; i++) {
					if(match(auth, pattern[i])) {
						element[key[i]] = substr(auth, RSTART, RLENGTH)
						auth = substr(auth, RSTART + RLENGTH)
					}
				}
			}
		}
		function sysexits(code,  status) {
			if(code == "EX_OK") {
				status = 0
			} else if(code == "EX_USAGE") {
				status = 64
			} else if(code == "EX_DATAERR") {
				status = 65
			} else if(code == "EX_NOINPUT") {
				status = 66
			} else if(code == "EX_NOUSER") {
				status = 67
			} else if(code == "EX_NOHOST") {
				status = 68
			} else if(code == "EX_UNAVAILABLE") {
				status = 69
			} else if(code == "EX_SOFTWARE") {
				status = 70
			} else if(code == "EX_OSERR") {
				status = 71
			} else if(code == "EX_OSFILE") {
				status = 72
			} else if(code == "EX_CANTCREAT") {
				status = 73
			} else if(code == "EX_IOERR") {
				status = 74
			} else if(code == "EX_TEMPFAIL") {
				status = 75
			} else if(code == "EX_PROTOCOL") {
				status = 76
			} else if(code == "EX_NOPERM") {
				status = 77
			} else if(code == "EX_CONFIG") {
				status = 78
			} else {
				status = 1
			}

			return status
		}

			BEGIN {
				exitStatus = 0

				for(i = 1; i < ARGC; i++) {
					uri = ARGV[i]

					if(uri_check(uri)) {
						uri_parse(url_encode_normalize(uri), element)
						element["path"] = uri_path_parent(element["path"], number)

						printf("%s\n", element["scheme"] element["authority"] element["path"])
					} else {
						printf("not URI: %s\n", uri) | "cat >&2"

						exitStatus = sysexits("EX_USAGE")
					}
				}

				exit exitStatus
			}
	EOF
)

awk \
	-v "number=${number}" \
	-- "${awkScript}" \
	${@+"${@}"} ||
	endCall "${?}"
