#!/usr/bin/env sh

### Script: w3mredirect
##
## w3m „ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„ÇíË°å„ÅÜ„ÄÇ
##
## Metadata:
##
##   author - <qq542vev at https://purl.org/meta/me/>
##   version - 2.0.0
##   date - 2022-06-28
##   since - 2019-07-13
##   copyright - Copyright (C) 2019-2022 qq542vev. Some rights reserved.
##   license - <CC-BY at https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * <Project homepage at https://github.com/qq542vev/w3mplus>
##   * <Bag report at https://github.com/qq542vev/w3mplus/issues>

VERSION='w3mredirect 2.0.0'

set -efu
umask '0022'
LC_ALL='C'
IFS=$(printf ' \t\n_')
IFS="${IFS%_}"
PATH="${PATH-}${PATH:+:}$(command -p getconf 'PATH')"
UNIX_STD='2003'         # HP-UX POSIX mode
XPG_SUS_ENV='ON'        # AIX POSIX mode
XPG_UNIX98='OFF'        # AIX UNIX 03 mode
POSIXLY_CORRECT='1'     # GNU Coreutils POSIX mode
COMMAND_MODE='unix2003' # macOS UNIX 03 mode
export 'IFS' 'LC_ALL' 'PATH' 'UNIX_STD' 'XPG_SUS_ENV' 'XPG_UNIX98' 'POSIXLY_CORRECT' 'COMMAND_MODE'

#!/usr/bin/env sh

### Script: sysexits.sh
##
## Exit status codes for system programs.
##
## This include file attempts to categorize possible error
## exit statuses for system programs, notably delivermail
## and the Berkeley network.
##
## Error numbers begin at EX__BASE to reduce the possibility of
## clashing with other exit statuses that random programs may
## already return.  The meaning of the codes is approximately
## as follows:
##
## EX_USAGE - The command was used incorrectly, e.g., with
##   the wrong number of arguments, a bad flag, a bad
##   syntax in a parameter, or whatever.
## EX_DATAERR - The input data was incorrect in some way.
##   This should only be used for user's data & not
##   system files.
## EX_NOINPUT - An input file (not a system file) did not
##   exist or was not readable.  This could also include
##   errors like "No message" to a mailer (if it cared
##   to catch it).
## EX_NOUSER - The user specified did not exist.  This might
##   be used for mail addresses or remote logins.
## EX_NOHOST - The host specified did not exist.  This is used
##   in mail addresses or network requests.
## EX_UNAVAILABLE - A service is unavailable.  This can occur
##   if a support program or file does not exist.  This
##   can also be used as a catchall message when something
##   you wanted to do doesn't work, but you don't know
##   why.
## EX_SOFTWARE - An internal software error has been detected.
##   This should be limited to non-operating system related
##   errors as possible.
## EX_OSERR - An operating system error has been detected.
##   This is intended to be used for such things as "cannot
##   fork", "cannot create pipe", or the like.  It includes
##   things like getuid returning a user that does not
##   exist in the passwd file.
## EX_OSFILE - Some system file (e.g., /etc/passwd, /etc/utmp,
##   etc.) does not exist, cannot be opened, or has some
##   sort of error (e.g., syntax error).
## EX_CANTCREAT - A (user specified) output file cannot be
##   created.
## EX_IOERR - An error occurred while doing I/O on some file.
## EX_TEMPFAIL - temporary failure, indicating something that
##   is not really an error.  In sendmail, this means
##   that a mailer (e.g.) could not create a connection,
##   and the request should be reattempted later.
## EX_PROTOCOL - the remote system returned something that
##   was "not possible" during a protocol exchange.
## EX_NOPERM - You did not have sufficient permission to
##   perform the operation.  This is not intended for
##   file system problems, which should use NOINPUT or
##   CANTCREAT, but rather for higher level permissions.
##
## metadata:
##
##   author - <qq542vev at https://purl.org/meta/me/>
##   date - 2020-03-05
##   version - 1.0.0
##   copyright - Copyright (c) 1987, 1993
##     The Regents of the University of California.  All rights reserved.
##   license - BSD-3-Clause
##   package - w3mplus
##   source - <sysexits.h at https://github.com/freebsd/freebsd/blob/master/include/sysexits.h>
##
## See Also:
##
##   * <Project homepage at https://github.com/qq542vev/w3mplus>
##   * <Bag report at https://github.com/qq542vev/w3mplus/issues>

#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the University nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.

readonly 'EX_OK=0' # successful termination

readonly 'EX__BASE=64' # base value for error messages

readonly 'EX_USAGE=64'       # command line usage error
readonly 'EX_DATAERR=65'     # data format error
readonly 'EX_NOINPUT=66'     # cannot open input
readonly 'EX_NOUSER=67'      # addressee unknown
readonly 'EX_NOHOST=68'      # host name unknown
readonly 'EX_UNAVAILABLE=69' # service unavailable
readonly 'EX_SOFTWARE=70'    # internal software error
readonly 'EX_OSERR=71'       # system error (e.g., can't fork)
readonly 'EX_OSFILE=72'      # critical OS file missing
readonly 'EX_CANTCREAT=73'   # can't create (user) output file
readonly 'EX_IOERR=74'       # input/output error
readonly 'EX_TEMPFAIL=75'    # temp failure; user is invited to retry
readonly 'EX_PROTOCOL=76'    # remote error in protocol
readonly 'EX_NOPERM=77'      # permission denied
readonly 'EX_CONFIG=78'      # configuration error

readonly 'EX__MAX=78' # maximum listed value

trap 'case "${?}" in 0) endCall;; *) endCall "${EX_SOFTWARE}";; esac' 0 # EXIT
trap 'endCall 129' 1                                                    # SIGHUP
trap 'endCall 130' 2                                                    # SIGINT
trap 'endCall 131' 3                                                    # SIGQUIT
trap 'endCall 143' 15                                                   # SIGTERM

endCall() {
	trap '' 0 # EXIT
	rm -fr -- ${tmpDir:+"${tmpDir}"}
	exit "${1:-0}"
}
option_error() {
	printf '%s: %s\n' "${0##*/}" "${1}" >&2
	printf '%s\n' "Ë©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅØ '${0##*/} --help' „ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ" >&2

	endCall "${EX_USAGE}"
}
#!/usr/bin/env sh

readonly CHAR_NUL=''
readonly CHAR_SOH=''
readonly CHAR_STX=''
readonly CHAR_ETX=''
readonly CHAR_EOT=''
readonly CHAR_ENQ=''
readonly CHAR_ACK=''
readonly CHAR_BEL=''
readonly CHAR_BS=''
readonly CHAR_HT='	'
readonly CHAR_LF='
'
readonly CHAR_VT=' '
readonly CHAR_FF='
'
readonly CHAR_CR=''
readonly CHAR_SO=''
readonly CHAR_SI=''
readonly CHAR_DLE=''
readonly CHAR_DC1=''
readonly CHAR_DC2=''
readonly CHAR_DC3=''
readonly CHAR_DC4=''
readonly CHAR_NAK=''
readonly CHAR_SYN=''
readonly CHAR_ETB=''
readonly CHAR_CAN=''
readonly CHAR_EM=''
readonly CHAR_SUB=''
readonly CHAR_ESC=''
readonly CHAR_FS=''
readonly CHAR_GS=''
readonly CHAR_RS=''
readonly CHAR_US=''
readonly CHAR_DEL=''
regex_match() {
	awk -- '
		BEGIN {
			for(i = 2; i < ARGC; i++) {
				if(ARGV[1] !~ ARGV[i]) {
					exit 1
				}
			}

			exit
		}
	' ${@+"${@}"} || return 1

	return 0
}

# @getoptions
parser_definition() {
	setup REST abbr:true error:option_error plus:true no:0 help:usage \
		-- 'Usage:' "  ${2##*/} [OPTION]... [KEYWORD]..." \
		'' 'Options:'

	param :'eval "${1#--}=\"\${OPTARG}\""' --a1 --a2 --a3 --a4 --a5 --a6 --a7 --a8 --a9 validate:'regex_match "${OPTARG}" "^[A-Z]+[^${CHAR_HT}${CHAR_LF}]*$"' var:W3M_COMMAND -- 'nÂÄãÁõÆ„ÅÆ URI „Ç¢„ÇØ„Çª„ÇπÂæå„Å´ W3M_COMMAND „ÇíÂÆüË°å„Åô„Çã'
	param :'eval "${1#--}=\"\${OPTARG}\""' --b1 --b2 --b3 --b4 --b5 --b6 --b7 --b8 --b9 validate:'regex_match "${OPTARG}" "^[A-Z]+[^${CHAR_HT}${CHAR_LF}]*$"' var:W3M_COMMAND -- 'nÂÄãÁõÆ„ÅÆ URI „Ç¢„ÇØ„Çª„ÇπÂâç„Å´ W3M_COMMAND „ÇíÂÆüË°å„Åô„Çã'
	param :'eval "${1#--}=\"\${OPTARG}\""' --c1 --c2 --c3 --c4 --c5 --c6 --c7 --c8 --c9 validate:'regex_match "${OPTARG}" "^-?[1-9][0-9]*$"' var:INTEGER -- 'ÊåáÂÆöÂàó„Å´ÁßªÂãï„Åô„Çã'
	param :'eval "${1#--}=\"\${OPTARG}\""' --l1 --l2 --l3 --l4 --l5 --l6 --l7 --l8 --l9 validate:'regex_match "${OPTARG}" "^-?[1-9][0-9]*$"' var:INTEGER -- 'ÊåáÂÆöË°å„Å´ÁßªÂãï„Åô„Çã'
	param tab -t --tab init:='current' pattern:'current | del-prebuf | newtab | open-newtab' var:"'current' | 'del-prebuf' | 'newtab' | 'open-newtab'" -- '„Çø„Éñ„ÅÆÂãï‰Ωú„ÇíÊåáÂÆö„Åô„Çã'
	param template -T --template init:='' var:FILE -- '„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éï„Ç°„Ç§„É´„ÇíÊåáÂÆö„Åô„Çã'
	disp :usage -h --help -- '„Åì„ÅÆ„Éò„É´„Éó„ÇíË°®Á§∫„Åó„Å¶ÁµÇ‰∫Ü„Åô„Çã'
	disp VERSION -v --version -- '„Éê„Éº„Ç∏„Éß„É≥ÊÉÖÂ†±„ÇíË°®Á§∫„Åó„Å¶ÁµÇ‰∫Ü„Åô„Çã'

	msg -- '' 'Exit Status:' \
		'    0 - successful termination' \
		'   64 - command line usage error' \
		'   65 - data format error' \
		'   66 - cannot open input' \
		'   67 - addressee unknown' \
		'   68 - host name unknown' \
		'   69 - service unavailable' \
		'   70 - internal software error' \
		"   71 - system error (e.g., can't fork)" \
		'   72 - critical OS file missing' \
		"   73 - can't create (user) output file" \
		'   74 - input/output error' \
		'   75 - temp failure; user is invited to retry' \
		'   76 - remote error in protocol' \
		'   77 - permission denied' \
		'   78 - configuration error' \
		'  129 - received SIGHUP' \
		'  130 - received SIGINT' \
		'  131 - received SIGQUIT' \
		'  143 - received SIGTERM'
}
# @end

# @gengetoptions parser -i parser_definition parse "${1}"
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
tab='current'
template=''
REST=''
parse() {
	OPTIND=$(($# + 1))
	while OPTARG= && [ $# -gt 0 ]; do
		set -- "${1%%\=*}" "${1#*\=}" "$@"
		while [ ${#1} -gt 2 ]; do
			case $1 in *[!a-zA-Z0-9_-]*) break ;; esac
			case '--a1' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a1" ;;
			esac
			case '--a2' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a2" ;;
			esac
			case '--a3' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a3" ;;
			esac
			case '--a4' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a4" ;;
			esac
			case '--a5' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a5" ;;
			esac
			case '--a6' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a6" ;;
			esac
			case '--a7' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a7" ;;
			esac
			case '--a8' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a8" ;;
			esac
			case '--a9' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --a9" ;;
			esac
			case '--b1' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b1" ;;
			esac
			case '--b2' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b2" ;;
			esac
			case '--b3' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b3" ;;
			esac
			case '--b4' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b4" ;;
			esac
			case '--b5' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b5" ;;
			esac
			case '--b6' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b6" ;;
			esac
			case '--b7' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b7" ;;
			esac
			case '--b8' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b8" ;;
			esac
			case '--b9' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --b9" ;;
			esac
			case '--c1' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c1" ;;
			esac
			case '--c2' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c2" ;;
			esac
			case '--c3' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c3" ;;
			esac
			case '--c4' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c4" ;;
			esac
			case '--c5' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c5" ;;
			esac
			case '--c6' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c6" ;;
			esac
			case '--c7' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c7" ;;
			esac
			case '--c8' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c8" ;;
			esac
			case '--c9' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --c9" ;;
			esac
			case '--l1' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l1" ;;
			esac
			case '--l2' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l2" ;;
			esac
			case '--l3' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l3" ;;
			esac
			case '--l4' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l4" ;;
			esac
			case '--l5' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l5" ;;
			esac
			case '--l6' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l6" ;;
			esac
			case '--l7' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l7" ;;
			esac
			case '--l8' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l8" ;;
			esac
			case '--l9' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --l9" ;;
			esac
			case '--tab' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --tab" ;;
			esac
			case '--template' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --template" ;;
			esac
			case '--help' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --help" ;;
			esac
			case '--version' in
			"$1")
				OPTARG=
				break
				;;
			$1*) OPTARG="$OPTARG --version" ;;
			esac
			break
		done
		case ${OPTARG# } in
		*\ *)
			eval "set -- $OPTARG $1 $OPTARG"
			OPTIND=$((($# + 1) / 2)) OPTARG=$1
			shift
			while [ $# -gt "$OPTIND" ]; do
				OPTARG="$OPTARG, $1"
				shift
			done
			set "Ambiguous option: $1 (could be $OPTARG)" ambiguous "$@"
			option_error "$@" >&2 || exit $?
			echo "$1" >&2
			exit 1
			;;
		?*)
			[ "$2" = "$3" ] || OPTARG="$OPTARG=$2"
			shift 3
			eval 'set -- "${OPTARG# }"' ${1+'"$@"'}
			OPTARG=
			;;
		*) shift 2 ;;
		esac
		case $1 in
		--?*=*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
			;;
		--no-* | --without-*) unset OPTARG ;;
		-[tT]?*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%"${OPTARG#??}"}" "${OPTARG#??}"' ${1+'"$@"'}
			;;
		-[hv]?*)
			OPTARG=$1
			shift
			eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
			OPTARG=
			;;
		+*) unset OPTARG ;;
		esac
		case $1 in
		'--a1' | '--a2' | '--a3' | '--a4' | '--a5' | '--a6' | '--a7' | '--a8' | '--a9')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^[A-Z]+[^${CHAR_HT}${CHAR_LF}]*$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^[A-Z]+[^${CHAR_HT}${CHAR_LF}]*$"
				break
			}
			eval "${1#--}=\"\${OPTARG}\""
			shift
			;;
		'--b1' | '--b2' | '--b3' | '--b4' | '--b5' | '--b6' | '--b7' | '--b8' | '--b9')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^[A-Z]+[^${CHAR_HT}${CHAR_LF}]*$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^[A-Z]+[^${CHAR_HT}${CHAR_LF}]*$"
				break
			}
			eval "${1#--}=\"\${OPTARG}\""
			shift
			;;
		'--c1' | '--c2' | '--c3' | '--c4' | '--c5' | '--c6' | '--c7' | '--c8' | '--c9')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^-?[1-9][0-9]*$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^-?[1-9][0-9]*$"
				break
			}
			eval "${1#--}=\"\${OPTARG}\""
			shift
			;;
		'--l1' | '--l2' | '--l3' | '--l4' | '--l5' | '--l6' | '--l7' | '--l8' | '--l9')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			regex_match "${OPTARG}" "^-?[1-9][0-9]*$" || {
				set -- regex_match:$? "$1" regex_match "${OPTARG}" "^-?[1-9][0-9]*$"
				break
			}
			eval "${1#--}=\"\${OPTARG}\""
			shift
			;;
		'-t' | '--tab')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			case $OPTARG in current | del-prebuf | newtab | open-newtab) ;;
			*)
				set "pattern:current | del-prebuf | newtab | open-newtab" "$1"
				break
				;;
			esac
			tab="$OPTARG"
			shift
			;;
		'-T' | '--template')
			[ $# -le 1 ] && set "required" "$1" && break
			OPTARG=$2
			template="$OPTARG"
			shift
			;;
		'-h' | '--help')
			usage
			exit 0
			;;
		'-v' | '--version')
			echo "${VERSION}"
			exit 0
			;;
		--)
			shift
			while [ $# -gt 0 ]; do
				REST="${REST} \"\${$((OPTIND - $#))}\""
				shift
			done
			break
			;;
		[-+]?*)
			set "unknown" "$1"
			break
			;;
		*)
			REST="${REST} \"\${$((OPTIND - $#))}\""
			;;
		esac
		shift
	done
	[ $# -eq 0 ] && {
		OPTIND=1
		unset OPTARG
		return 0
	}
	case $1 in
	unknown) set "Unrecognized option: $2" "$@" ;;
	noarg) set "Does not allow an argument: $2" "$@" ;;
	required) set "Requires an argument: $2" "$@" ;;
	pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
	notcmd) set "Not a command: $2" "$@" ;;
	*) set "Validation error ($1): $2" "$@" ;;
	esac
	option_error "$@" >&2 || exit $?
	echo "$1" >&2
	exit 1
}
usage() {
	cat <<'GETOPTIONSHERE'
Usage:
  w3mredirect [OPTION]... [KEYWORD]...

Options:
          --a1, --a2, --a3, --a4, --a5, --a6, --a7, --a8, --a9 W3M_COMMAND 
                              nÂÄãÁõÆ„ÅÆ URI „Ç¢„ÇØ„Çª„ÇπÂæå„Å´ W3M_COMMAND „ÇíÂÆüË°å„Åô„Çã
          --b1, --b2, --b3, --b4, --b5, --b6, --b7, --b8, --b9 W3M_COMMAND 
                              nÂÄãÁõÆ„ÅÆ URI „Ç¢„ÇØ„Çª„ÇπÂâç„Å´ W3M_COMMAND „ÇíÂÆüË°å„Åô„Çã
          --c1, --c2, --c3, --c4, --c5, --c6, --c7, --c8, --c9 INTEGER 
                              ÊåáÂÆöÂàó„Å´ÁßªÂãï„Åô„Çã
          --l1, --l2, --l3, --l4, --l5, --l6, --l7, --l8, --l9 INTEGER 
                              ÊåáÂÆöË°å„Å´ÁßªÂãï„Åô„Çã
  -t,     --tab 'current' | 'del-prebuf' | 'newtab' | 'open-newtab' 
                              „Çø„Éñ„ÅÆÂãï‰Ωú„ÇíÊåáÂÆö„Åô„Çã
  -T,     --template FILE     „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éï„Ç°„Ç§„É´„ÇíÊåáÂÆö„Åô„Çã
  -h,     --help              „Åì„ÅÆ„Éò„É´„Éó„ÇíË°®Á§∫„Åó„Å¶ÁµÇ‰∫Ü„Åô„Çã
  -v,     --version           „Éê„Éº„Ç∏„Éß„É≥ÊÉÖÂ†±„ÇíË°®Á§∫„Åó„Å¶ÁµÇ‰∫Ü„Åô„Çã

Exit Status:
    0 - successful termination
   64 - command line usage error
   65 - data format error
   66 - cannot open input
   67 - addressee unknown
   68 - host name unknown
   69 - service unavailable
   70 - internal software error
   71 - system error (e.g., can't fork)
   72 - critical OS file missing
   73 - can't create (user) output file
   74 - input/output error
   75 - temp failure; user is invited to retry
   76 - remote error in protocol
   77 - permission denied
   78 - configuration error
  129 - received SIGHUP
  130 - received SIGINT
  131 - received SIGQUIT
  143 - received SIGTERM
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

#eval "$(getoptions parser_definition parse "${0}")"
parse ${@+"${@}"}
eval "set -- ${REST}"

awkScript=$(
	cat <<-'EOF'
		function singlequote_escape(string) {
			gsub(/'+/, "'\"&\"'", string)

			return string
		}

			BEGIN {
				FS = "\t"

				if(tab != "del-prebuf") {
					print_header("BACK")
				}
			}

			function print_header(field) {
				printf(" -H 'W3m-control: %s'", singlequote_escape(field))
			}

			{
				uri = $1
				line = $2
				colmun = $3
				before = $4
				after = $5

				if(before != "") {
					print_header(before)
				}

				if(tab == "newtab") {
					print_header("TAB_GOTO " uri)
				} else if(tab == "open-newtab") {
					print_header("NEW_TAB")
					print_header("GOTO " uri)
					print_header("DELETE_PREVBUF")
				} else {
					print_header("GOTO " uri)
				}

				if(line ~ /^[1-9][0-9]*$/) {
					print_header("BEGIN")

					if(1 < line) {
						print_header("MOVE_DOWN " (line - 1))
					}
				} else if(line ~ /^-[1-9][0-9]*$/) {
					print_header("END")

					if(line < -1) {
						print_header("MOVE_UP " ((line * -1) - 1))
					}
				}

				if(tab == "del-prebuf") {
					print_header("DELETE_PREVBUF")
				}

				if(colmun ~ /^[1-9][0-9]*$/) {
					print_header("LINE_BEGIN")

					if(1 < colmun) {
						print_header("MOVE_RIGHT " (colmun - 1))
					}
				} else if(colmun ~ /^-[1-9][0-9]*$/) {
					print_header("LINE_END")

					if(colmun < -1) {
						print_header("MOVE_LEFT " ((colmun * -1) - 1))
					}
				}

				if(after != "") {
					print_header(after)
				}

				tab = "open-newtab"
			}
	EOF
)

option=$(
	case "${#}" in
	'0') cat ;;
	*)
		for uri in ${@+"${@}"}; do
			i=$((${i-0} + 1))
			eval "line=\${l${i}-}"
			eval "colmun=\${c${i}-}"
			eval "before=\${b${i}-}"
			eval "after=\${a${i}-}"

			printf '%s\t%d\t%d\t%s\t%s\n' "${uri}" "${line}" "${colmun}" "${before}" "${after}"
		done
		;;
	esac | awk -v "tab=${tab}" -- "${awkScript}"
)

eval httpresponse \
	'${template:+--template "${template}"}' \
	"${option}"
