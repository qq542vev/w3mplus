#!/usr/bin/env sh

## File: getreg
##
## Get a register.
##
## Usage:
##
##   (start code)
##   getreg [OPTION]... [key]...
##   (end)
##
## Options:
##
##   -c, --config=FILE     - register file.
##   -E, --extended-regexp - PATTERNS are extended regular expressions.
##   -r, --row             - print row data.
##   -h, --help            - display this help and exit.
##   -v, --version         - output version information and exit.
##
## Exit Status:
##
##   0 - Program terminated normally.
##   1 - No corresponding field found.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 1.3.2
##   date - 2020-09-18
##   since - 2020-04-20
##   copyright - Copyright (C) 2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -efu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

# 各変数に既定値を代入する
config="${W3MPLUS_REGISTER_FILE}"
regexpFlag='0'
rowFlag='0'
args=''

# コマンドライン引数の解析する
while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-c' | '--config')
			config="${2}"
			shift 2
			;;
		'-E' | '--extended-regexp')
			regexpFlag='1'
			shift
			;;
		'-r' | '--row')
			rowFlag='1'
			shift
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			usage
			exit
			;;
		# バージョン情報を表示して終了する
		'-v' | '--version')
			version
			exit
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift
			args="${args}$(quoteEscape ${@+"${@}"})"
			shift "${#}"
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exitStatus="${EX_USAGE}"; exit
			;;
		# その他のオプション以外の引数
		*)
			args="${args}$(quoteEscape "${1}")"
			shift
			;;
	esac
done

directory=$(dirname -- "${config}"; printf '$')
mkdir -p -- "${directory%?$}"
: >>"${config}"

# オプション以外の引数を再セットする
eval set -- "${args}"

case "${#}" in '0')
	cat -- "${config}"
	exit
esac

set +e

awkScript=$(
	cat <<- 'EOF'
	BEGIN {
		exitStatus = 0
	}

	{
		outputFlag = 0
		pattern = $0

		if(regexpFlag) {
			pattern = "^" pattern "$"
		}

		while(0 < (getline < config)) {
			if((regexpFlag && $1 ~ pattern) || (!regexpFlag && $1 ==  pattern)) {
				if(rowFlag) {
					printf("%s\n", $0)
				} else {
					gsub(/%/, "%%", $2)
					gsub(/'+/, "'\"&\"'", $2)
					system("printf '" $2 "'")
				}

				outputFlag = 1
			}
		}

		close(config)

		if(!outputFlag) {
			exitStatus = 1
		}
	}

	END {
		exit exitStatus
	}
	EOF
)

printf '%s\n' ${@+"${@}"} | awk -F '\t' -v "config=$(printf '%s' "${config}" | octalEncode)" -v "regexpFlag=${regexpFlag}" -v "rowFlag=${rowFlag}" -- "${awkScript}"
awkStatus="${?}"
set -e

case "${awkStatus}" in
	'1') exitStatus="${awkStatus}"; exit;;
	*) exit "${awkStatus}";;
esac
