#!/usr/bin/env sh

## File: w3mplus
##
## Display the response for w3m.
##
## Usage:
##
##   (start code)
##   QUERY_STRING='HTTP_QUERY' w3mplus
##   (end)
##
## Options:
##
## Exit Status:
##
##   0 - Program terminated normally.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 1.9.0
##   date - 2020-05-05
##   since - 2019-05-25
##   copyright - Copyright (C) 2019-2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -efu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

expand () (
	eval printf '%s' "\"\${${1}}\""
)

addPrintCache () (
	tmpFile=$(mktemp -u)

	httpResponseW3mBack.sh "W3m-control: PRINT ${tmpFile}" "W3m-control: GOTO file://${SCRIPT_NAME}?${QUERY_STRING}${QUERY_STRING:+&}file=$(printf '%s' "${tmpFile}" | urlencode)"
)

gotoMove () (
	awk -v "moveLine=${1-0}" -v "moveColmun=${2-0}" -- '
		BEGIN {
			jumpListCount = split("line colmun", jumpList, " ")

			data["line_enable"] = moveLine
			data["line_goto"] = "COMMAND BEGIN; MOVE_DOWN %s"
			data["line_end"] = "COMMAND END; MOVE_UP %s"
			data["line_center"] = "CENTER_V"

			data["colmun_enable"] = moveColmun
			data["colmun_goto"] = "COMMAND LINE_BEGIN; MOVE_RIGHT %s"
			data["colmun_end"] = "COMMAND LINE_END; MOVE_LEFT %s"
			data["colmun_center"] = "CENTER_H"
		}

		function w3mCommand(command) {
			printf("W3m-control: %s\n", command)
		}

		{
			uri = $1
			data["line_number"] = $2
			data["colmun_number"] = $3

			printf("%s\n", uri)

			for(i = 1; i <= jumpListCount; i++) {
				if(data[jumpList[i] "_enable"]) {
					if(0 < data[jumpList[i] "_number"]) {
						w3mCommand(sprintf(data[jumpList[i] "_goto"], data[jumpList[i] "_number"] - 1))
					} else {
						w3mCommand(sprintf(data[jumpList[i] "_end"], data[jumpList[i] "_number"] * -1))
					}

					w3mCommand(data[jumpList[i] "_center"])
				}
			}
		}
	' | printRedirect.sh -
)

eval "$(printf '%s' "${QUERY_STRING-}" | parsequery --prefix 'query_')"

case "${query_redirect-}" in [0-9])
	export "W3MPLUS_REDIRECT_TYPE=${query_redirect}"
esac

case "${query_back-}" in [0-9])
	export "W3MPLUS_BACK=${query_back}"
esac

tmpFile="${query_file-}"

if result=$(
	case "${query_action-}" in
		'autoCommand')
			string=$(expand "${query_string-W3M_URL}")

			getautocmd -- "${query_call-manual}" ${string:+"${string}"}
			;;
		'closeTab')
			if [ -n "${W3M_URL}" ]; then
				closetab --line "${W3M_CURRENT_LINE}" --colmun "${W3M_CURRENT_COLUMN}" -- "${W3M_URL}"
			fi

			printf 'W3m-control: CLOSE_TAB' | httpResponseW3mBack.sh -
			;;
		'undoTab')
			export 'W3MPLUS_REDIRECT_TYPE=1'

			case "${query_count-}" in '@'*)
				query_number="@$(date -u '+%Y%m%d%H%M%S' | TZ='UTC+0' utconv)"
			esac

			undotab ${query_number+'--number' "${query_number}"} ${query_count+'--count' "${query_count}"} | gotoMove '1'
			;;
		'undoTabs')
			: >>"${W3MPLUS_PATH}/tabRestore"

			printRedirect.sh "file://$(printf '%s' "${W3MPLUS_PATH}" | urlencode | fsed '%2F' '/')/tabRestore"
			;;
		'homepage')
			printRedirect.sh "${WWW_HOME-about:home}"
			;;
		'aboutURI')
			abouturi ${query_uri+"${query_uri}"}
			;;
		'moveColmun')
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -f "${tmpFile}" ]; then
				cat <<- EOF | httpResponseW3mBack.sh -
					W3m-control: GOTO_LINE $(printf '%d' "${line}")
					W3m-control: MOVE_RIGHT1 $(mvcolmun --line "${line}" ${query_percent+'--number' "${query_percent}"} --skip -- "${tmpFile}")
				EOF
			else
				addPrintCache
			fi
			;;
		'moveParagraph')
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -f "${tmpFile}" ]; then
				mvpara --line "${line}" ${query_number+'--number' "${query_number}"} -- "${tmpFile}"
			else
				addPrintCache
			fi
			;;
		'movePercent')
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -f "${tmpFile}" ]; then
				mvpercent --line "${line}" ${query_percent+'--number' "${query_percent}"} -- "$(grep -c -e '^' -- "${tmpFile}" || :)"
			else
				addPrintCache
			fi
			;;
		'stringFind')
			word=$(expand "${query_word-W3M_CURRENT_WORD}")

			charfind ${query_number+'--number' "${query_number}"} -- "${word}"
			;;
		'wordFind')
			word=$(expand "${query_word-W3M_CURRENT_WORD}")

			charfind --exact ${query_number+'--number' "${query_number}"} -- "${word}"
			;;
		'qmarks')
			: >>"${W3MPLUS_PATH}/quickmark"

			printRedirect.sh "file://$(printf '%s' "${W3MPLUS_PATH}" | urlencode | fsed '%2F' '/')/quickmark"
			;;
		'getQuickMark')
			getqmark -- ${query_key+"${query_key}"} | cut -f '2-4' | gotoMove
			;;
		'setQuickMark')
			uri=$(expand "${query_uri-W3M_URL}")
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -n "${uri}" ]; then
				setqmark --line "${line}" -- "${query_key}" "${uri}"
			fi
			;;
		'marks')
			: >>"${W3MPLUS_PATH}/localmark"

			printRedirect.sh "file://$(printf '%s' "${W3MPLUS_PATH}" | urlencode | fsed '%2F' '/')/localmark"
			;;
		'getLocalMark')
			getautocmd --config "${W3MPLUS_PATH}/localmark" -- "${query_key}" "${W3M_URL%%#*}"
			;;
		'setLocalMark')
			uri=$(expand "${query_uri-W3M_URL}")
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -n "${uri}" ]; then
				setautocmd --config "${W3MPLUS_PATH}/localmark" -- "${query_key}" "grep -Fx -e '$(printf '%s' "${uri%%#*}" | sed -e "s/'\\{1,\\}/'\"&\"'/g")'" "GOTO_LINE ${line}"
			fi
			;;
		'getLocalMarkGoto')
			getqmark --config "${W3MPLUS_PATH}/localmarkGoto" -- ${query_key+"${query_key}"} | cut -f '2-4' | gotoMove '1'
			;;
		'setLocalMarkGoto')
			uri=$(expand "${query_uri-W3M_URL}")
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -n "${uri}" ]; then
				setqmark --config "${W3MPLUS_PATH}/localmarkGoto" --line "${line}" -- "${query_key}" "${uri}"
			fi
			;;
		'registers')
			: >>"${W3MPLUS_PATH}/register"

			printRedirect.sh "file://$(printf '%s' "${W3MPLUS_PATH}" | urlencode | fsed '%2F' '/')/register"
			;;
		'getreg')
			register=$(getreg "${query_key-0}"; printf '$')
			W3MPLUS_REGISTER_TMP="${register%$}" runenvvar "${query_run}" 'W3MPLUS_REGISTER_TMP'
			;;
		'setreg')
			value=$(expand "${query_value-W3M_URL}")

			case "${value}" in ?*)
				printf '%s' "${value}" | setreg "${query_key-+}" -
				;;
			esac

			httpResponseW3mBack.sh
			;;
		'contextMenu')
			contextmenu
			;;
		'linkSetOpen')
			if [ -n "${W3M_CURRENT_LINK}" ]; then
				httpResponseW3mBack.sh - <<- 'EOF'
					W3m-control: SET_OPTION default_url=2
					W3m-control: GOTO
				EOF
			fi
			;;
		'linkSetTabopen')
			if [ -n "${W3M_CURRENT_LINK}" ]; then
				httpResponseW3mBack.sh - <<- 'EOF'
					W3m-control: SET_OPTION default_url=2
					W3m-control: TAB_GOTO
				EOF
			fi
			;;
		'runVariable')
			runenvvar ${query_encode+-e "${query_encode}"} "${query_run}" "${query_variable}"
			;;
		'lineVisualMode')
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -f "${tmpFile}" ]; then
				visualmode --line "${line}" -- "${tmpFile}"
			else
				addPrintCache
			fi
			;;
		'zoom')
			zoom=$(chimgscale ${query_zoom+'--number' "${query_zoom}"})

			httpResponseW3mBack.sh - <<- EOF
				W3m-control: SET_OPTION image_scale=${zoom}
				W3m-control: RESHAPE
			EOF
			;;
		'search')
			case "${query_query-}" in ?*)
				printf '%s\n' "${query_query}" >>"${W3MPLUS_PATH}/searhhistory"
				printf '%s' "${query_query}" | setreg '/' -
			esac

			printRedirect.sh "${W3MPLUS_SEARCH_URI}$(printf '%s' "${query_query-}" | urlencode)"
			;;
		'dictWordSearch')
			keyword="${query_query#?}"

			searchhist () {
				case "${histword}" in '')
					printHtml.sh --title 'Event not found' --status-code '400 Bad Request' <<- EOF
						<p>search: ${keyword}: event not found</p>
					EOF

					exit
				esac

				keyword="$(printf '%s' "${histword}" | urldecode)${keyword#${hist}}"
			}

			case "${keyword}" in
				'!')
					awkScript=$(
						cat <<- 'EOF'
						BEGIN {
							printf("<pre typeof=\"rdf:Seq\" rel=\"rdf:li\"><samp>")
						}

						function htmlEscape(string) {
							gsub("&", "\\&amp;", string)
							gsub("<", "\\&lt;", string)
							gsub(">", "\\&gt;", string)
							gsub("\"", "\\&quot;", string)

							return string
						}

						{
							command = "printf '%s' '" $1 "' | urldecode"
							command | getline keyword
							close(command)

							printf("<span typeof=\"\">%4d  <date property=\"dc:created\" datatype=\"dc:W3CDTF\">%s</date>  <a property=\"dc:subject\" rel=\"dc:relation\" href=\"%s\">%s</a></span>\n", NR, $3, htmlEscape($2 $1), htmlEscape(keyword))
						}

						END {
							printf("</samp></pre>")
						}
						EOF
					)

					awk -F '\t' -- "${awkScript}" "${W3MPLUS_PATH}/searhhistory" | printHtml.sh --title 'Search History'

					exit
					;;
				'!!'*)
					hist='!!'
					histword=$(sed -n -e '${p; q}' -- "${W3MPLUS_PATH}/searhhistory" | cut -f '1')
					searchhist
					;;
				'!'[1-9]*)
					hist=$(expr "${keyword}" ':' '\(![1-9][0-9]*\)')
					histword=$(sed -n -e "${hist#!}{p; q}" -- "${W3MPLUS_PATH}/searhhistory" | cut -f '1')
					searchhist
					;;
				'!-'[1-9]*)
					hist=$(expr "${keyword}" ':' '\(!-[1-9][0-9]*\)')
					histword=$(tail -n "${hist#!-}" -- "${W3MPLUS_PATH}/searhhistory" | head -n '1' | cut -f '1')
					searchhist
					;;
				'!?'[!?]*'?'*)
					hist=$(expr "${keyword}" ':' '\(!?[^?]\{1,\}?\)')
					histword=$(cut -f '2-' -- "${W3MPLUS_PATH}/searhhistory" | grep -F -e "$(printf '%s' "${hist%?}" | cut -c '3-')" | tail -n '1')
					searchhist
					;;
				'!'[!\	\ ]*)
					hist=$(expr "${keyword}" ':' '\(![^	 ]\{1,\}\)')
					histword=$(cut -f '2-' -- "${W3MPLUS_PATH}/searhhistory" | grep -e "^$(sedEscape "${hist#!}")" | tail -n '1')
					searchhist
					;;
			esac

			encoded=$(printf '%s' "${keyword}" | urlencode)

			case "${keyword}" in ?*)
				printf '%s\t%s\t%s\n' "${encoded}" "${W3MPLUS_SEARCH_URI}" "$(date -u '+%Y-%m-%dT%H:%M:%SZ')" >>"${W3MPLUS_PATH}/searhhistory"
				printf '%s\n' "${keyword}" | setreg '/' -
			esac

			printRedirect.sh "${W3MPLUS_SEARCH_URI}${encoded}" ${query_prevtab+'W3m-control: PREV_TAB'}
			;;
		'selectLine')
			line=$(expand "${query_line-W3M_CURRENT_LINE}")

			if [ -f "${tmpFile}" ]; then
				selectline --line "${line}" ${query_number+'--number' "${query_number}"} -- "${query_subaction}" "${tmpFile}"
			else
				addPrintCache
			fi
			;;
		'equalPrg')
			if [ -n "${W3MPLUS_EQUALPRG}" ]; then
				if [ -f "${W3M_SOURCEFILE}" ]; then
					w3m -dump "${W3M_SOURCEFILE}" | eval "${W3MPLUS_EQUALPRG}"
				fi
			else
				printHtml.sh --title 'Bad Request' --status-code '400 Bad Request' <<- 'EOF'
					<p>The value of the environment variable <strong><var>W3MPLUS_EQUALPRG</var></strong> is empty.</p>
				EOF
			fi
			;;
		'cookieManager')
			url=$(expand "${query_url-W3M_URL}")

			if [ -n "${url}" ]; then
				cookiemanager ${query_blacklist+'--blacklist' "${query_blacklist}"} ${query_whitelist+'--whitelist' "${query_whitelist}"} ${query_subdomain+'--subdomain'} -- "${url}"
			fi
			;;
		'bookmarkBar')
			uri=$(expand "${query_url-W3M_URL}")

			bmarkbar ${uri:+'--uri' "${uri}"} ${query_type:+'--type' "${query_type}"}
			;;
		'historyBar')
			uri=$(expand "${query_url-W3M_URL}")

			histbar ${uri:+'--uri' "${uri}"} ${query_type:+'--type' "${query_type}"}
			;;
		'httpsEverywhere')
			siteconf=$(mktemp)
			cp -f -- "${HOME}/.w3m/siteconf" "${siteconf}"

			if sed -n -e '/^# HTTPS Everywhere$/,/^$/p' -- "${siteconf}" | grep -Fqx '# url m@^http://@'; then
				sed -e '/^# HTTPS Everywhere$/,/^$/{s/^# url/url/; s/^# substitute_url/substitute_url/}' -- "${siteconf}" >"${HOME}/.w3m/siteconf"
				printf 'W3m-control: REINIT\n'
			elif sed -n -e '/^# HTTPS Everywhere$/,/^$/p' -- "${siteconf}" | grep -Fqx 'url m@^http://@'; then
				sed -e '/^# HTTPS Everywhere$/,/^$/{s/^url/# url/; s/^substitute_url/# substitute_url/}' -- "${siteconf}" >"${HOME}/.w3m/siteconf"
				printf 'W3m-control: REINIT\n'
			fi | httpResponseW3mBack.sh -

			rm -f -- "${siteconf}"
			;;
		'zMove')
			if [ "${query_move}" = 'b' ]; then
				move='PREV_HALF_PAGE'
			else
				move='NEXT_HALF_PAGE'
			fi

			httpResponseW3mBack.sh - <<- EOF
				W3m-control: CENTER_V
				W3m-control: ${move}
				W3m-control: GOTO_LINE ${W3M_CURRENT_LINE}
			EOF
			;;
		*)
			printHtml.sh --title 'Bad Request' --status-code '400 Bad Request' <<- EOF
				<dl>
					<dt>autoCommand</dt>
					<dd>file://${SCRIPT_NAME}?action=autoCommand&amp;call={call-type}</dd>

					<dt>closeTab</dt>
					<dd>file://${SCRIPT_NAME}?action=closeTab</dd>

					<dt>undoTab</dt>
					<dd>file://${SCRIPT_NAME}?action=undoTab&amp;number={number}</dd>

					<dt>undoTabs</dt>
					<dd>file://${SCRIPT_NAME}?action=undoTabs</dd>

					<dt>homepage</dt>
					<dd>file://${SCRIPT_NAME}?action=homepage</dd>

					<dt>aboutURI</dt>
					<dd>file://${SCRIPT_NAME}?action=aboutURI&amp;uri={about-uri}</dd>

					<dt>moveColmun</dt>
					<dd>file://${SCRIPT_NAME}?action=moveColmun&amp;number={number}&amp;file={file}</dd>

					<dt>moveParagraph</dt>
					<dd>file://${SCRIPT_NAME}?action=moveParagraph&amp;number={number}&amp;file={file}</dd>

					<dt>movePercent</dt>
					<dd>file://${SCRIPT_NAME}?action=movePercent&amp;percent={percent}&amp;file={file}</dd>

					<dt>stringFind</dt>
					<dd>file://${SCRIPT_NAME}?action=stringFind&number={number}</dd>

					<dt>wordFind</dt>
					<dd>file://${SCRIPT_NAME}?action=wordFind&number={number}</dd>

					<dt>qmarks</dt>
					<dd>file://${SCRIPT_NAME}?action=qmarks</dd>

					<dt>getQuickMark</dt>
					<dd>file://${SCRIPT_NAME}?action=getQuickMark&amp;key={key}</dd>

					<dt>setQuickMark</dt>
					<dd>file://${SCRIPT_NAME}?action=setQuickMark&amp;key={key}</dd>

					<dt>marks</dt>
					<dd>file://${SCRIPT_NAME}?action=marks</dd>

					<dt>getLocalMark</dt>
					<dd>file://${SCRIPT_NAME}?action=getLocalMark&amp;key={key}</dd>

					<dt>setLocalMark</dt>
					<dd>file://${SCRIPT_NAME}?action=setLocalMark&amp;key={key}</dd>

					<dt>getLocalMarkGoto</dt>
					<dd>file://${SCRIPT_NAME}?action=getLocalMarkGoto&amp;key={key}</dd>

					<dt>setLocalMarkGoto</dt>
					<dd>file://${SCRIPT_NAME}?action=setLocalMarkGoto&amp;key={key}</dd>

					<dt>contextMenu</dt>
					<dd>file://${SCRIPT_NAME}?action=contextMenu</dd>

					<dt>uri</dt>
					<dd>file://${SCRIPT_NAME}?action=uri&subaction={addBookmark|parentPath|prevTab|sendEmail|viewSource|viewSourceExternally|yank}</dd>

					<dt>lineVisualMode</dt>
					<dd>file://${SCRIPT_NAME}?action=lineVisualMode</dd>

					<dt>yankSelection</dt>
					<dd>file://${SCRIPT_NAME}?action=yankSelection</dd>

					<dt>zoom</dt>
					<dd>file://${SCRIPT_NAME}?action=zoom&amp;zoom={number}</dd>

					<dt>search</dt>
					<dd>file://${SCRIPT_NAME}?action=search&amp;query={query}</dd>

					<dt>dictWordSearch</dt>
					<dd>file://${SCRIPT_NAME}?action=dictWordSearch&amp;query={query}</dd>

					<dt>selectLine</dt>
					<dd>file://${SCRIPT_NAME}?action=selectLine&amp;subaction={subaction}&amp;number={number}&amp;file={file}</dd>

					<dt>equalPrg</dt>
					<dd>file://${SCRIPT_NAME}?action=equalPrg</dd>
				</dl>
			EOF
			;;
	esac 2>&1

	printf '$'
); then
	if [ -z "${result%$}" ]; then
		httpResponseW3mBack.sh
	else
		printf '%s' "${result%$}"
	fi
else
	printHtml.sh --title '500 Internal Server Error' --status-code '500 Internal Server Error' <<- EOF
	<p>An unexpected error occurred during request processing.</p>

	<section id="error-message">
		<h1>Error message</h1>

		<pre title="Error Message"><samp>$(printf '%s' "${result}" | htmlescape)</samp></pre>
	</section>

	<section id="environment-variable">
		<h1>Environment variable</h1>

		<pre title="Environment variable"><code><samp>$(env | htmlescape)</samp></code></pre>
	</section>
	EOF

	exit 70 # EX_SOFTWARE </usr/include/sysexits.h>
fi
