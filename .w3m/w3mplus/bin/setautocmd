#!/usr/bin/env sh

## File: setautocmd
##
## Set a auto command.
##
## Usage:
##
##   (start code)
##   setautocmd [OPTION]... CALL [CHECK]...
##   (end)
##
## Options:
##
##   -c, --config=FILE - configuration file.
##   -h, --help        - display this help and exit.
##   -v, --version     - output version information and exit.
##
## Exit Status:
##
##   0 - Program terminated normally.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 1.1.0
##   date - 2020-08-02
##   since 2019-12-15
##   copyright - Copyright (C) 2019-2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -efu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

outputHtml () {
	htmlescape - | awk -F '\t' '{
		call = $1
		check = $2
		date = $3

		printf("<dl>")

		printf("<dt>call type</dt>")
		printf("<dd>%s</dd>", call)

		printf("<dt>check command</dt>")
		printf("<dd><code>%s</code></dd>", check)

		printf("<dt>date</dt>")
		printf("<dd><date>%s</date></dd>", date)

		printf("</dl>")
	}'
}

# 各変数に既定値を代入する
config="${W3MPLUS_AUTOCMD_FILE}"

# コマンドライン引数の解析する
while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-c' | '--config')
			config="${2}"
			shift 2
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			usage
			exit
			;;
		# バージョン情報を表示して終了する
		'-v' | '--version')
			version
			exit
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift
			break
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exitStatus="${EX_USAGE}"; exit
			;;
		# その他のオプション以外の引数
		*)
			break
			;;
	esac
done

directory=$(dirname -- "${config}"; printf '$')
mkdir -p -- "${directory%?$}"
: >>"${config}"

case "${#}" in '0')
	cat -- "${config}"
	exit
esac

call="${1}"
shift
check=${@+"${@}"}

escaped=$(sedEscape "${call}	${check-}${check:+	}")
field=$(
	if [ '1' -le "${#}" ]; then
			printf '%s\t%s\t%s' "${call}" "${check}" "$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
	fi
)

addList=$(printf '%s' "${field}" | outputHtml)
deleteList=$(sed -e "/^${escaped}/!d" "${config}" | outputHtml)

if [ -z "${addList}" ] && [ -z "${deleteList}" ]; then
		httpresponse
		exit
fi

{
	sed -e "/^\$/d; /^${escaped}/d" -- "${config}"
	printf '%s' "${field}"
} | sort -o "${config}"

if [ -n "${addList}" ]; then
	addList="<h1>Added auto command</h1>${addList}"
fi

if [ -n "${deleteList}" ]; then
	deleteList="<h1>Deleted auto command </h1>${deleteList}"
fi

printf '%s' "${addList}${deleteList}" | printhtml  --title "Set auto command '${call}'" --http-template '' -
