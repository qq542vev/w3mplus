#!/usr/bin/env sh

## File: cookiemanager
##
## Cookie management.
##
## Usage:
##
##   (start code)
##   cookiemanager [OPTION]... [DOMAIN]...
##   (end)
##
## Options:
##
##   -b, --blacklist=TYPE - black list type (add, delete, toggle)
##   -c, --config=FILE    - w3m configuration file
##   -s, --subdomain      - also applies to subdomains
##   -w, --whitelist=TYPE - white list type (add, delete, toggle)
##   -h, --help           - display this help and exit.
##   -v, --version        - output version information and exit.
##
## Exit Status:
##
##   0 - Program terminated normally.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 1.0.3
##   date - 2020-02-27
##   since - 2020-01-27
##   copyright - Copyright (C) 2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -efu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

# 各変数に既定値を代入する
config="${W3MPLUS_W3M_CONFIG}"
blacklist=''
whitelist=''
subdomain='0'
args=''

# コマンドライン引数の解析する
while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-b' | '--blacklist')
			case "${2}" in
				'add' | 'delete' | 'toggle')
					blacklist="${2}"
					shift 2
					;;
				*)
					cat <<- EOF 1>&2
						${0##*/}: invalid option -- '${1}'
						The only available values for the '${1}' are 'add', 'delete' and 'toggle'.
					EOF

					exitStatus="${EX_USAGE}"; exit
					;;
			esac
			;;
		'-c' | '--config')
			config="${2}"
			shift 2
			;;
		'-s' | '--subdomain')
			subdomain='1'
			shift
			;;
		'-w' | '--whitelist')
			case "${2}" in
				'add' | 'delete' | 'toggle')
					whitelist="${2}"
					shift 2
					;;
				*)
					cat <<- EOF 1>&2
						${0##*/}: invalid option -- '${1}'
						The only available values for the '${1}' are 'add', 'delete' and 'toggle'.
					EOF

					exitStatus="${EX_USAGE}"; exit
					;;
			esac
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			usage
			exit
			;;
		# バージョン情報を表示して終了する
		'-v' | '--version')
			version
			exit
			;;
		# 標準入力を処理する
		'-')
			shift
			args="${args}$(quoteEscape $(cat))"
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift
			args="${args}$(quoteEscape ${@+"${@}"})"
			shift "${#}"
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exitStatus="${EX_USAGE}"; exit
			;;
		# その他のオプション以外の引数
		*)
			args="${args}$(quoteEscape "${1}")"
			shift
			;;
	esac
done

directory=$(dirname -- "${config}"; printf '$')
mkdir -p -- "${directory%?$}"
: >>"${config}"

# オプション以外の引数を再セットする
eval set -- "${args}"

uriPattern='^\(\([^:/?#]\{1,\}\):\)\{0,1\}\(\/\/\([^@/?#]@\)\{0,1\}\([^/?#]*\)\(:[^/?#]*\)\{0,1\}\)\{0,1\}\([^?#]*\)\(?\([^#]*\)\)\{0,1\}\(#\(.*\)\)\{0,1\}$'
hostPattern='^([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?\.)*[A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?$'
ipPattern='^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
tmpFile=$(mktemp)
listitem=''
headerField=''

for value in ${blacklist:+"cookie_reject_domains ${blacklist}"} ${whitelist:+"cookie_accept_domains ${whitelist}"}; do
	name="${value% *}"
	action="${value#* }"
	field=$(sed -e "/^${name}[	 ]/!d; q" -- "${config}")

	if [ -z "${field}" ]; then
		fieldValue=''
		printf '%s \n' "${name}" >>"${config}"
	else
		fieldValue=$(printf '%s,' "${field}" | sed -e "s/^${name}//; s/[	 ,]\\{1,\\}/,/" | tr 'A-Z' 'a-z')
	fi

	for domain in ${@+"${@}"}; do
		if host=$(uricheck -f 'host' "${domain}"); then
			domain="${host}"
		fi

		if [ "$(printf '%s' "${domain}" | wc -l)" -eq 0 ] && printf '%s' "${domain}" | grep -Eq -e "${hostPattern}"; then :; else
			printf "%s: invalid domain -- '%s'\\n" "${0##*/}" "${domain}" 1>&2
			continue
		fi

		if [ "${subdomain}" -eq 1 ] && printf '%s' "${domain}" | grep -Eqv -e "${ipPattern}"; then
			domain=".${domain}"
		fi

		case "${fieldValue}" in
			*",${domain},"*)
				case "${action}" in 'delete' | 'toggle')
					fieldValue=$(printf '%s' "${fieldValue}" | fsed ",${domain}" '')
					listitem="${listitem}<li>Removed the '<strong>${domain}</strong>' from the '<code>${name}</code>'.</li>"
					;;
				esac
				;;
			*)
				case "${action}" in 'add' | 'toggle')
					fieldValue="${fieldValue}${domain},"
					listitem="${listitem}<li>Added the '<strong>${domain}</strong>' to the '<code>${name}</code>'.</li>"
					;;
				esac
				;;
		esac
	done

	fieldValue="${fieldValue#,}"
	fieldValue="${fieldValue%,}"

	sed -e "/^${name}[	 ]/c ${name} ${fieldValue}" -- "${config}" >"${tmpFile}"
	cp -fp "${tmpFile}" "${config}"

	headerField=$(printf '%sW3m-control: SET_OPTION %s=%s\n$' "${headerField}" "${name}" "${fieldValue}")
	headerField="${headerField%$}"
done

printf '<ul>%s</ul>' "${listitem}" | printHtml.sh --header-field "${headerField}" --title 'Cookie Manager' --http-template ''
