#!/usr/bin/env sh

## File: closetab
##
## Close the tab and record the URI.
##
## Usage:
##
##   (start code)
##   closetab [OPTION]... [URI]...
##   (end)
##
## Options:
##
##   -c, --config=FILE   - restore file.
##   -C, --colmun=NUMBER - colmun number.
##   -l, --line=NUMBER   - line number.
##   -h, --help          - display this help and exit.
##   -v, --version       - output version information and exit.
##
## Exit Status:
##
##   0 - Program terminated normally.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 3.0.0
##   date - 2020-12-15
##   since 2019-08-02
##   copyright - Copyright (C) 2019-2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -efu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

# 各変数に既定値を代入する
config="${W3MPLUS_UNDO_FILE}"
colmun='1'
line='1'
size="${W3MPLUS_UNDO_HISTSIZE}"
fields=''
unixtime=$(date -u '+%Y%m%d%H%M%S' | TZ='UTC+0' utconv)

setFieldList() {
	if uris=$(uricheck --verbose ${@+"${@}"}); then :; else
		exitStatus="${EX_USAGE}"
	fi

	for uri in ${uris}; do
		fields=$(printf '%s\t%d\t%d\t%s\n%s' "${uri}" "${line}" "${colmun}" "${unixtime}" "${fields}")
	done
}

# コマンドライン引数の解析する
while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-c' | '--config')
			config="${2}"
			shift 2
			;;
		'-C' | '--colmun')
			if [ "${2}" = '0' ] || expr -- "${2}" ':' '-\{0,1\}[1-9][0-9]*$' >'/dev/null'; then
				colmun="${2}"
				shift 2
			else
				printf 'The option "%s" must be a integer.\n' "${1}" 1>&2
				exitStatus="${EX_USAGE}"; exit
			fi
			;;
		'-l' | '--line')
			if [ "${2}" = '0' ] || expr -- "${2}" ':' '-\{0,1\}[1-9][0-9]*$' >'/dev/null'; then
				line="${2}"
				shift 2
			else
				printf 'The option "%s" must be a integer.\n' "${1}" 1>&2
				exitStatus="${EX_USAGE}"; exit
			fi
			;;
		'-s' | '--size')
			if [ "${2}" = '0' ] || expr -- "${2}" ':' '[1-9][0-9]*$' >'/dev/null'; then
				size="${2}"
				shift 2
			else
				printf 'The option "%s" must be a positive integer.\n' "${1}" 1>&2
				exitStatus="${EX_USAGE}"; exit
			fi
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			usage
			exit
			;;
		# バージョン情報を表示して終了する
		'-v' | '--version')
			version
			exit
			;;
		# 標準入力を処理する
		'-')
			setFieldList $(cat)
			shift
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift
			setFieldList ${@+"${@}"}
			shift "${#}"
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exitStatus="${EX_USAGE}"; exit
			;;
		# その他のオプション以外の引数
		*)
			setFieldList "${1}"
			shift
			;;
	esac
done

directory=$(dirname -- "${config}"; printf '$')
mkdir -p -- "${directory%?$}"
: >>"${config}"

{
	{
		printf '%s\n' "${fields}"
		head -n '1' -- "${config}"
	} | awk '
		BEGIN {
			split("", previous)
		}

		function printArray(array) {
			if(array[1] != "") {
				printf("%s\t%s\t%s\t%s\n", array[1], array[2], array[3], array[4])
			}
		}

		$1 != previous[1] {
			printArray(previous)
			split($0, previous, FS)
		}

		END {
			printArray(previous)
		}
	'

	tail -n '+2' -- "${config}"
} | head -n "${size}" | sponge -- "${config}"
