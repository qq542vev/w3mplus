#!/usr/bin/env sh

## File: setRegister
##
## Set register for w3m.
##
## Usage:
##
##   (start code)
##   setRegister [OPTION]... [FILE]...
##   (end)
##
## Options:
##
##   -c, --config=FILE - register file
##   -h, --help        - display this help and exit.
##   -v, --version     - output version information and exit.
##
## Exit Status:
##
##   0 - Program terminated normally.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 1.1.0
##   date - 2020-04-27
##   copyright - Copyright (C) 2019-2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -efu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

toEscapeSequence () (
	(cat ${@+"${@}"}; echo) | awk -- '
		BEGIN {
			getline
			printf("%s", toEscapeSequence($0))

			while(0 < getline) {
				printf("\\n%s", toEscapeSequence($0))
			}
		}

		function toEscapeSequence(string) {
			gsub("\\", "\\\\\\\\", string)
			gsub("\a", "\\\\a", string)
			gsub("\b", "\\\\b", string)
			gsub("\t", "\\\\t", string)
			gsub("\v", "\\\\v", string)
			gsub("\f", "\\\\f", string)
			gsub("\r", "\\\\r", string)

			return string
		}
	'
)

tmpDir=$(mktemp -d)
config="${W3MPLUS_PATH}/register"
args=''

while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-c' | '--congig')
			config="${2}"
			shift 2
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			usage
			exit
			;;
		# バージョン情報を表示して終了する
		'-v' | '--version')
			version
			exit
			;;
		# 標準入力を処理する
		'-')
			tmpFile=$(mktemp -p "${tmpDir}")
			cat >"${tmpFile}"
			shift
			set -- "${tmpFile}" ${@+"${@}"}
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift
			args="${args}$(quoteEscape ${@+"${@}"})"
			shift "${#}"
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exitStatus="${EX_USAGE}"; exit
			;;
		# その他のオプション以外の引数
		*)
			args="${args}$(quoteEscape "${1}")"
			shift
			;;
	esac
done

directory=$(dirname -- "${config}"; printf '$')
mkdir -p -- "${directory%?$}"
: >>"${config}"

eval set -- "${args}"

# 引数の個数が過小である
case "${#}" in '0')
	tmpFile=$(mktemp -p "${tmpDir}")
	cat >"${tmpFile}"

	set -- '0' "${tmpFile}"
	;;
esac

date=$(date -u '+%Y-%m-%dT%H:%M:%SZ')

while [ 1 -le "${#}" ]; do
	key="${1}"
	file="${2}"

	case "${key}" in
		'+')
			case "${file}" in
				'')
					sed -e "/^[0-9]	/d" -- "${config}"
					;;
				*)
					awk -F '\t' -- '
						BEGIN {
							split("", data)
							count = 0
						}

						count < 9 && count == $1 {
							count++
						}

						{
							data[$1] = $2 "\t" $3
						}

						END {
							for(i = count; 1 <= i; i--) {
								data[i] = data[i - 1]
							}

							delete data[0]

							for(key in data) {
								printf("%s\t%s\n", key, data[key])
							}
						}
					' "${config}"

					printf '%s\t%s\t%s\n' '0' "$(toEscapeSequence "${file}")" "${date}"
					;;
			esac
			;;
		'+'*)
			reg=$(getRegister -c "${config}" -- "${key#+}" || :; printf '$')
			reg="${reg%$}"

			if [ -n "${file}" ]; then
				sed -e "/^${key#+}	/d" -- "${config}"

				printf '%s\t%s\t%s\n' "${key#+}" "$(
				{
					printf '%s' "${reg}"
					cat -- "${file}"
				} | toEscapeSequence)" "${date}"
			elif [ -n "${reg}" ]; then
				cat -- "${config}"
			fi
			;;
		*)
			sed -e "/^${key}	/d" -- "${config}"

			case "${file}" in ?*)
				printf '%s\t%s\t%s\n' "${key}" "$(toEscapeSequence "${file}")" "${date}"
				;;
			esac
			;;
	esac | sort -o "${config}"

	shift 2
done
