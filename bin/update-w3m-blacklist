#!/usr/bin/env sh

## File: update-w3m-blacklist
##
## Update the blacklist for w3m.
##
## Usage:
##
##   (start code)
##   update-w3m-blacklist [OPTION]... [SITECONF_FILE]...
##   (end)
##
## Options:
##
##   -b, --begin=MESSAGE - begin message
##   -e, --end=MESSAGE   - end message
##   -r, --redirect=URI  - redirect page
##   -s, --skip          - continue even if the download fails
##   -h, --help          - display this help and exit
##   -v, --version       - output version information and exit
##
## Exit Status:
##
##   0 - Program terminated normally.
##   64<= and <=78 - Program terminated abnormally. See </usr/include/sysexits.h> for the returned value.
##
## Metadata:
##
##   author - qq542vev <https://purl.org/meta/me/>
##   version - 3.0.0
##   date - 2020-03-24
##   copyright - Copyright (C) 2019-2020 qq542vev. Some rights reserved.
##   license - CC-BY <https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * Project homepage - <https://github.com/qq542vev/w3mplus>
##   * Bag report - <https://github.com/qq542vev/w3mplus/issues>

# 初期化
set -eu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# initファイルの読み込み
: "${W3MPLUS_PATH:=${HOME}/.w3m/w3mplus}"
. "${W3MPLUS_PATH}/lib/w3mplus/init"

# 各変数に既定値を代入する
redirect="file:///cgi-bin/blocking"
beginMessage='# BEGIN - Blacklist - '
endMessage='# END - Blacklist'
skipFlag='0'
args=''

# コマンドライン引数の解析する
while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-b' | '--begin')
			if [ "$(printf '%s' "${2}" | wc -l)" -eq 0 ]; then
				beginMessage="${2}"
				shift 2
			else
				cat <<- EOF 1>&2
					${0##*/}: '${1}' must not contain newlines.
					Try '${0##*/} --help' for more information.
				EOF

				exitStatus="${EX_USAGE}"; exit
			fi
			;;
		'-e' | '--end')
			if [ "$(printf '%s' "${2}" | wc -l)" -eq 0 ]; then
				endMessage="${2}"
				shift 2
			else
				cat <<- EOF 1>&2
					${0##*/}: '${1}' must not contain newlines.
					Try '${0##*/} --help' for more information.
				EOF

				exitStatus="${EX_USAGE}"; exit
			fi
			;;
		'-r' | '--redirect')
			redirect="${2}"
			shift 2
			;;
		'-s' | '--skip')
			skipFlag='1'
			shift
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			usage
			exit
			;;
		# バージョン情報を表示して終了する
		'-v' | '--version')
			version
			exit
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift
			args="${args}$(quoteEscape ${@+"${@}"})"
			shift "${#}"
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exitStatus="${EX_USAGE}"; exit
			;;
		# その他のオプション以外の引数
		*)
			args="${args}$(quoteEscape "${1}")"
			shift
			;;
	esac
done

# オプション以外の引数を再セットする
eval set -- "${args}"

# 引数の個数が過小である
if [ "${#}" -eq 0 ]; then
	set -- "${HOME}/.w3m/siteconf"
fi

escapedBeginMes=$(printf '%s' "${beginMessage}" | sed -e 's/[].\*/[]/\\&/g')
escapedEndMes=$(printf '%s' "${endMessage}" | sed -e 's/[].\*/[]/\\&/g')
tmpDir=$(mktemp -d)

sed -e "/^${escapedBeginMes}/!d" -- ${@+"${@}"} | sort | uniq | while read -r 'message'; do
	url="${message#${beginMessage}}"

	printf 'Downloading... %s\n' "${url}" 1>&2

	w3m -dump_source -o 'auto_uncompress=1' "${url}" >"${tmpDir}/blacklist"

	if [ ! -s "${tmpDir}/blacklist" ]; then
		printf 'Download failed.\n' 1>&2

		if [ "${skipFlag}" -eq 1 ]; then
			continue
		fi

		exitStatus="${EX_UNAVAILABLE}"; exit
	fi

	printf 'Converting...\n' 1>&2

	awk -v "redirect=${redirect}" -v "source=$(printf '%s' "${url}" | urlencode)" -- '
		BEGIN {
			count = split("http https", protocols)
		}

		/^[A-Za-z][A-Za-z0-9+.-]*:\/\// {
			printf("url \"%s\"\n", $1)
			printf("substitute_url \"%s?source=%s&url=%s\"\n", redirect, source, $1)
			printf("\n")
			next
		}

		/^([A-Za-z0-9._~!$&'()*+,;=-]|%[0-9A-Fa-f][0-9A-Fa-f])$/ {
			for(i = 1; i <= count; i++) {
				blockURL = protocols[i] "://" $1 "/"

				printf("url \"%s\"\n", blockURL)
				printf("substitute_url \"%s?source=%s&url=%s\"\n", redirect, source, blockURL)
				printf("\n")
			}
		}
	' "${tmpDir}/blacklist" >"${tmpDir}/urls"

	printf 'Data Writing...\n' 1>&2

	escapedMes=$(printf '%s' "${message}" | sed -e 's/\([].\*/[]\)/\\\1/g')

	for config in ${@+"${@}"}; do
		sed -e "/^${escapedMes}\$/{p; :loop; /${escapedEndMes}\$/{D}; g; N; b loop}" -- "${config}" | sed -e "/^${escapedMes}\$/r ${tmpDir}/urls" >"${tmpDir}/siteconf"

		cp -fp -- "${tmpDir}/siteconf" "${config}"
	done

	rm -fr -- "${tmpDir:?}/"*
done

printf 'Done\n' 1>&2
