#!/usr/bin/env sh

##
# Update the blacklist for w3m.
#
# @author qq542vev
# @version 2.1.2
# @date 2020-01-25
# @copyright Copyright (C) 2019-2020 qq542vev. Some rights reserved.
# @licence CC-BY <https://creativecommons.org/licenses/by/4.0/>
##

# 初期化
set -eu
umask '0022'
IFS=$(printf ' \t\n$'); IFS="${IFS%$}"
export 'IFS'

# 終了時の動作を設定する
trap 'endcall' 0 # EXIT
trap 'endcall; exit 129' 1 # SIGHUP
trap 'endcall; exit 130' 2 # SIGINT
trap 'endcall; exit 131' 3 # SIGQUIT
trap 'endcall; exit 143' 15 # SIGTERM

# 終了時に一時ディレクトリを削除する
endcall () {
	rm -fr -- "${tmpDir-}"
}

# 各変数に既定値を代入する
redirect="file:///cgi-bin/blocking?"
beginMessage='# BEGIN - Blacklist - '
endMessage='# END - Blacklist'
skipFlag='0'
args=''

# コマンドライン引数の解析する
while [ 1 -le "${#}" ]; do
	case "${1}" in
		'-b' | '--begin')
			if [ 2 -le "$(printf '%s' "${2}" | grep -c -e '^')" ]; then
				cat <<- EOF 1>&2
					${0##*/}: '${1}' must not contain newlines.
					Try '${0##*/} --help' for more information.
				EOF

				exit 64 # EX_USAGE </usr/include/sysexits.h>
			fi

			beginMessage="${2}"
			shift 2
			;;
		'-e' | '--end')
			if [ 2 -le "$(printf '%s' "${2}" | grep -c -e '^')" ]; then
				cat <<- EOF 1>&2
					${0##*/}: '${1}' must not contain newlines.
					Try '${0##*/} --help' for more information.
				EOF

				exit 64 # EX_USAGE </usr/include/sysexits.h>
			fi

			endMessage="${2}"
			shift 2
			;;
		'-r' | '--redirect')
			redirect="${2}"
			shift 2
			;;
		'-s' | '--skip')
			skipFlag='1'
			shift
			;;
		# ヘルプメッセージを表示して終了する
		'-h' | '--help')
			cat <<- EOF
				Usage: ${0##*/} [OPTION]... [CONFIG_FILE]...
				Update the blacklist for w3m.

				 -b, --begin=STRING  begin message
				 -e, --end=STRING    end message
				 -r, --redirect=URI  redirect page
				 -s, --skip          continue even if the download fails
				 -h, --help          display this help and exit
				 -v, --version       output version information and exit
			EOF

			exit
			;;
		'-v' | '--version')
			cat <<- EOF
				${0##*/} (w3mplus) $(sed -n -e 's/^# @version //1p' -- "${0}") (Last update: $(sed -n -e 's/^# @date //1p' -- "${0}"))
				$(sed -n -e 's/^# @copyright //1p' -- "${0}")
				License: $(sed -n -e 's/^# @licence //1p' -- "${0}")
			EOF

			exit
			;;
		# `--name=value` 形式のロングオプション
		'--'[!-]*'='*)
			option="${1}"
			shift
			# `--name value` に変換して再セットする
			set -- "${option%%=*}" "${option#*=}" ${@+"${@}"}
			;;
		# 以降はオプション以外の引数
		'--')
			shift

			while [ 1 -le "${#}" ]; do
				arg=$(printf '%s\n' "${1}" | sed -e "s/'\\{1,\\}/'\"&\"'/g"; printf '$');

				args="${args}${args:+ }'${arg%?$}'"
				shift
			done
			;;
		# 複合ショートオプション
		'-'[!-][!-]*)
			option=$(printf '%s\n' "${1}" | cut -c '2'; printf '$')
			options=$(printf '%s\n' "${1}" | cut -c '3-'; printf '$')

			shift
			# `-abc` を `-a -bc` に変換して再セットする
			set -- "-${option%?$}" "-${options%?$}" ${@+"${@}"}
			;;
		# その他の無効なオプション
		'-'*)
			cat <<- EOF 1>&2
				${0##*/}: invalid option -- '${1}'
				Try '${0##*/} --help' for more information.
			EOF

			exit 64 # EX_USAGE </usr/include/sysexits.h>
			;;
		# その他のオプション以外の引数
		*)
			arg=$(printf '%s\n' "${1}" | sed -e "s/'\\{1,\\}/'\"&\"'/g"; printf '$');

			args="${args}${args:+ }'${arg%?$}'"
			shift
			;;
	esac
done

# オプション以外の引数を再セットする
eval set -- "${args}"

# 引数の個数が過小である
if [ "${#}" -eq 0 ]; then
	set -- "${HOME}/.w3m/siteconf"
fi

escapedBeginMes=$(printf '%s' "${beginMessage}" | sed -e 's/[].\*/[]/\\&/g')
escapedEndMes=$(printf '%s' "${endMessage}" | sed -e 's/[].\*/[]/\\&/g')
tmpDir=$(mktemp -d)

sed -e "/^${escapedBeginMes}/!d" -- ${@+"${@}"} | sort | uniq | while read -r 'message'; do
	url="${message#${beginMessage}}"

	printf 'Downloading... %s\n' "${url}" 1>&2

	w3m -dump_source -o 'auto_uncompress=1' "${url}" >"${tmpDir}/blacklist"

	if [ ! -s "${tmpDir}/blacklist" ]; then
		printf 'Download failed.\n' 1>&2

		if [ "${skipFlag}" -eq 1 ]; then
			continue
		fi

		exit 69 # EX_UNAVAILABLE </usr/include/sysexits.h>
	fi

	printf 'Converting...\n' 1>&2

	awk -v "redirect=${redirect}" '
		BEGIN {
			pLength = split("http https", protocol)
		}
		/:\/\// {
			printf "url \"%s\"\n", $1
			printf "substitute_url \"%s%s\"\n", redirect, $1
			printf "\n"
			next
		}
		{
			for(i = 1; i <= pLength; i++) {
				blockURL = protocol[i] "://" $1 "/"

				printf "url \"%s\"\n", blockURL
				printf "substitute_url \"%s%s\"\n", redirect, blockURL
				printf "\n"
			}
		}
	' "${tmpDir}/blacklist" >"${tmpDir}/urls"

	printf 'Data Writing...\n' 1>&2

	escapedMes=$(printf '%s' "${message}" | sed -e 's/\([].\*/[]\)/\\\1/g')

	for config in ${@+"${@}"}; do
		sed -e "/^${escapedMes}\$/{p; :loop; /${escapedEndMes}\$/{D}; g; N; b loop}" -- "${config}" | sed -e "/^${escapedMes}\$/r ${tmpDir}/urls" >"${tmpDir}/siteconf"

		cp -fp -- "${tmpDir}/siteconf" "${config}"
	done

	rm -fr -- "${tmpDir:?}/"*
done

printf 'Done\n' 1>&2
