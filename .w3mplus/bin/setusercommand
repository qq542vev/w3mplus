#!/usr/bin/env sh

### Script: setusercommand
##
## ユーザーコマンドを登録する。
##
## Metadata:
##
##   author - <qq542vev at https://purl.org/meta/me/>
##   version - 1.1.3
##   date - 2022-06-28
##   since - 2019-12-15
##   copyright - Copyright (C) 2019-2022 qq542vev. Some rights reserved.
##   license - <CC-BY at https://creativecommons.org/licenses/by/4.0/>
##   package - w3mplus
##
## See Also:
##
##   * <Project homepage at https://github.com/qq542vev/w3mplus>
##   * <Bag report at https://github.com/qq542vev/w3mplus/issues>

VERSION='setusercommand 1.1.3'

. 'init.sh'
. 'sysexits.sh'
. 'usage.sh'
. 'regex_escape.sh'
. 'control_character.sh'

output() {
	awk -F '\t' -- '{
		call = $1
		command = $2
		date = $3

		if(NR != 1) {
			printf("\n")
		}

		printf("call type: %s\n", call)
		printf("check command: %s\n", command)
		printf("date: %s\n", date)
	}'
}

# @getoptions
parser_definition() {
	setup REST abbr:true error:error plus:true no:0 help:usage \
		-- 'Usage:' "  ${2##*/} [OPTION]... [CALL] [COMMAND_ARG]..." \
		'' 'Options:'

	param config  -c --config  init:'config="${HOME}/.w3mplus/autocmd"' var:FILE -- '設定ファイルを指定する'
	disp  :usage  -h --help    -- 'このヘルプを表示して終了する'
	disp  VERSION -v --version -- 'バージョン情報を表示して終了する'

	msg -- '' 'Exit Status:' \
		'    0 - successful termination' \
		'   64 - command line usage error' \
		'   65 - data format error' \
		'   66 - cannot open input' \
		'   67 - addressee unknown' \
		'   68 - host name unknown' \
		'   69 - service unavailable' \
		'   70 - internal software error' \
		"   71 - system error (e.g., can't fork)" \
		'   72 - critical OS file missing' \
		"   73 - can't create (user) output file" \
		'   74 - input/output error' \
		'   75 - temp failure; user is invited to retry' \
		'   76 - remote error in protocol' \
		'   77 - permission denied' \
		'   78 - configuration error' \
		'  129 - received SIGHUP' \
		'  130 - received SIGINT' \
		'  131 - received SIGQUIT' \
		'  143 - received SIGTERM'
}
# @end

# @gengetoptions parser -i parser_definition parse "${1}"
# @end

eval "$(getoptions parser_definition parse "${0}")"
parse ${@+"${@}"}
eval "set -- ${REST}"

if [ -d "${config}" ]; then
	printf "'%s' is directory.\\n" "${config}" >&2
	endCall "${EX_CANTCREAT}"
fi

if [ '!' -e "${config}" ]; then
	configDir=$(dirname -- "${config}"; printf '_')
	mkdir -p -- "${configDir%?_}"

	: >"${config}"
fi

case "${#}" in
	'0')
		${VISUAL:-${EDITOR:-vi}} "${config}"
		exit
		;;
esac

for arg in ${@+"${@}"}; do
	case "${arg}" in
		*"${CHAR_HT}"* | *"${CHAR_LF}"*)
			cat <<-EOF 1>&2
				${0##*/}: invalid arg -- '${arg}'
				Try '${0##*/} --help' for more information.
			EOF

			endCall "${EX_USAGE}"
			;;
	esac
done

call="${1}"
shift

command="${*}"
regex_escape 'escaped' "${call}${CHAR_HT}${command}${command:+${CHAR_HT}}" 'SED-BRE'

case "${#}" in
	'0')
		row=''
		deleteList=$(sed -e "/^${escaped}/!d" "${config}" | output)
		;;
	*)
		row=$(printf '%s\t%s\t%s\n$' "${call}" "${command}" "$(date -u '+%Y-%m-%dT%H:%M:%SZ')")
		row="${row%$}"
		;;
esac

{
	sed -e "/^\$/d; /^${escaped}/d" -- "${config}"
	printf '%s' "${row}"
} | sort -k '1,1' -k '3,3' -t "${CHAR_HT}" -o "${config}"

case "${#}" in
	'0')
		case "${deleteList}" in
			?*) printf 'Deleted auto command\n\n%s\n' "${deleteList}";;
		esac
		;;
		*) printf 'Added auto command\n\n%s\n' "$(printf '%s' "${row}" | output)";;
	*)
	;;
esac
